Terminals unused in grammar

   KW_STRING
   KW_TRUE
   KW_FALSE
   KW_IF
   KW_THEN
   KW_ELSE
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_RETURN
   KW_NOT
   KW_AND
   KW_OR
   STRING
   TK_OP_EQ
   TK_OP_BIGGER
   TK_OP_BIGEQ
   TK_OP_NOTEQ


Grammar

    0 $accept: program $end

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    2 var_decl_list: var_decl_list var_decl
    3              | var_decl

    4 var_decl: KW_LET let_decl_body

    5 let_decl_body: let_decl_list ':' type_spec ';'

    6 let_decl_list: let_decl_list ',' let_decl_init
    7              | let_decl_init

    8 let_decl_init: let_decl_id
    9              | let_decl_id ASSIGN expr

   10 let_decl_id: IDENT
   11            | '[' ']' IDENT
   12            | IDENT '[' POSINT ']'

   13 type_spec: KW_INT
   14          | KW_REAL
   15          | KW_BOOL

   16 expr: POSINT
   17     | REAL
   18     | '(' expr ')'
   19     | expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr

   23 body: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 18
')' (41) 1 18
'*' (42) 21
'+' (43) 19
',' (44) 6
'-' (45) 20
'/' (47) 22
':' (58) 1 5
';' (59) 5
'[' (91) 11 12
']' (93) 11 12
'{' (123) 1
'}' (125) 1
error (256)
KW_INT (258) 1 13
KW_REAL (259) 14
KW_STRING (260)
KW_TRUE (261)
KW_FALSE (262)
KW_BOOL (263) 15
KW_IF (264)
KW_THEN (265)
KW_ELSE (266)
KW_FI (267)
KW_WHILE (268)
KW_LOOP (269)
KW_POOL (270)
KW_CONST (271) 1
KW_LET (272) 4
KW_RETURN (273)
KW_NOT (274)
KW_AND (275)
KW_OR (276)
KW_START (277) 1
STRING (278)
IDENT (279) 10 11 12
POSINT (280) 12 16
REAL (281) 17
ASSIGN (282) 1 9
TK_OP_EQ (283)
TK_OP_BIGGER (284)
TK_OP_BIGEQ (285)
TK_OP_NOTEQ (286)
ARROW (287) 1


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
var_decl_list (48)
    on left: 2 3, on right: 1 2
var_decl (49)
    on left: 4, on right: 2 3
let_decl_body (50)
    on left: 5, on right: 4
let_decl_list (51)
    on left: 6 7, on right: 5 6
let_decl_init (52)
    on left: 8 9, on right: 6 7
let_decl_id (53)
    on left: 10 11 12, on right: 8 9
type_spec (54)
    on left: 13 14 15, on right: 5
expr (55)
    on left: 16 17 18 19 20 21 22, on right: 9 18 19 20 21 22
body (56)
    on left: 23, on right: 1


State 0

    0 $accept: . program $end
    1 program: . var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    2 var_decl_list: . var_decl_list var_decl
    3              | . var_decl
    4 var_decl: . KW_LET let_decl_body

    KW_LET  shift, and go to state 1

    program        go to state 2
    var_decl_list  go to state 3
    var_decl       go to state 4


State 1

    4 var_decl: KW_LET . let_decl_body
    5 let_decl_body: . let_decl_list ':' type_spec ';'
    6 let_decl_list: . let_decl_list ',' let_decl_init
    7              | . let_decl_init
    8 let_decl_init: . let_decl_id
    9              | . let_decl_id ASSIGN expr
   10 let_decl_id: . IDENT
   11            | . '[' ']' IDENT
   12            | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 5
    '['    shift, and go to state 6

    let_decl_body  go to state 7
    let_decl_list  go to state 8
    let_decl_init  go to state 9
    let_decl_id    go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: var_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    2 var_decl_list: var_decl_list . var_decl
    4 var_decl: . KW_LET let_decl_body

    KW_CONST  shift, and go to state 12
    KW_LET    shift, and go to state 1

    var_decl  go to state 13


State 4

    3 var_decl_list: var_decl .

    $default  reduce using rule 3 (var_decl_list)


State 5

   10 let_decl_id: IDENT .  [ASSIGN, ':', ',']
   12            | IDENT . '[' POSINT ']'

    '['  shift, and go to state 14

    $default  reduce using rule 10 (let_decl_id)


State 6

   11 let_decl_id: '[' . ']' IDENT

    ']'  shift, and go to state 15


State 7

    4 var_decl: KW_LET let_decl_body .

    $default  reduce using rule 4 (var_decl)


State 8

    5 let_decl_body: let_decl_list . ':' type_spec ';'
    6 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 16
    ','  shift, and go to state 17


State 9

    7 let_decl_list: let_decl_init .

    $default  reduce using rule 7 (let_decl_list)


State 10

    8 let_decl_init: let_decl_id .  [':', ',']
    9              | let_decl_id . ASSIGN expr

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 8 (let_decl_init)


State 11

    0 $accept: program $end .

    $default  accept


State 12

    1 program: var_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    KW_START  shift, and go to state 19


State 13

    2 var_decl_list: var_decl_list var_decl .

    $default  reduce using rule 2 (var_decl_list)


State 14

   12 let_decl_id: IDENT '[' . POSINT ']'

    POSINT  shift, and go to state 20


State 15

   11 let_decl_id: '[' ']' . IDENT

    IDENT  shift, and go to state 21


State 16

    5 let_decl_body: let_decl_list ':' . type_spec ';'
   13 type_spec: . KW_INT
   14          | . KW_REAL
   15          | . KW_BOOL

    KW_INT   shift, and go to state 22
    KW_REAL  shift, and go to state 23
    KW_BOOL  shift, and go to state 24

    type_spec  go to state 25


State 17

    6 let_decl_list: let_decl_list ',' . let_decl_init
    8 let_decl_init: . let_decl_id
    9              | . let_decl_id ASSIGN expr
   10 let_decl_id: . IDENT
   11            | . '[' ']' IDENT
   12            | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 5
    '['    shift, and go to state 6

    let_decl_init  go to state 26
    let_decl_id    go to state 10


State 18

    9 let_decl_init: let_decl_id ASSIGN . expr
   16 expr: . POSINT
   17     | . REAL
   18     | . '(' expr ')'
   19     | . expr '+' expr
   20     | . expr '-' expr
   21     | . expr '*' expr
   22     | . expr '/' expr

    POSINT  shift, and go to state 27
    REAL    shift, and go to state 28
    '('     shift, and go to state 29

    expr  go to state 30


State 19

    1 program: var_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    ASSIGN  shift, and go to state 31


State 20

   12 let_decl_id: IDENT '[' POSINT . ']'

    ']'  shift, and go to state 32


State 21

   11 let_decl_id: '[' ']' IDENT .

    $default  reduce using rule 11 (let_decl_id)


State 22

   13 type_spec: KW_INT .

    $default  reduce using rule 13 (type_spec)


State 23

   14 type_spec: KW_REAL .

    $default  reduce using rule 14 (type_spec)


State 24

   15 type_spec: KW_BOOL .

    $default  reduce using rule 15 (type_spec)


State 25

    5 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 33


State 26

    6 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 6 (let_decl_list)


State 27

   16 expr: POSINT .

    $default  reduce using rule 16 (expr)


State 28

   17 expr: REAL .

    $default  reduce using rule 17 (expr)


State 29

   16 expr: . POSINT
   17     | . REAL
   18     | . '(' expr ')'
   18     | '(' . expr ')'
   19     | . expr '+' expr
   20     | . expr '-' expr
   21     | . expr '*' expr
   22     | . expr '/' expr

    POSINT  shift, and go to state 27
    REAL    shift, and go to state 28
    '('     shift, and go to state 29

    expr  go to state 34


State 30

    9 let_decl_init: let_decl_id ASSIGN expr .  [':', ',']
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr

    '-'  shift, and go to state 35
    '+'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 9 (let_decl_init)


State 31

    1 program: var_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body '}'

    '('  shift, and go to state 39


State 32

   12 let_decl_id: IDENT '[' POSINT ']' .

    $default  reduce using rule 12 (let_decl_id)


State 33

    5 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 5 (let_decl_body)


State 34

   18 expr: '(' expr . ')'
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr

    '-'  shift, and go to state 35
    '+'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 40


State 35

   16 expr: . POSINT
   17     | . REAL
   18     | . '(' expr ')'
   19     | . expr '+' expr
   20     | . expr '-' expr
   20     | expr '-' . expr
   21     | . expr '*' expr
   22     | . expr '/' expr

    POSINT  shift, and go to state 27
    REAL    shift, and go to state 28
    '('     shift, and go to state 29

    expr  go to state 41


State 36

   16 expr: . POSINT
   17     | . REAL
   18     | . '(' expr ')'
   19     | . expr '+' expr
   19     | expr '+' . expr
   20     | . expr '-' expr
   21     | . expr '*' expr
   22     | . expr '/' expr

    POSINT  shift, and go to state 27
    REAL    shift, and go to state 28
    '('     shift, and go to state 29

    expr  go to state 42


State 37

   16 expr: . POSINT
   17     | . REAL
   18     | . '(' expr ')'
   19     | . expr '+' expr
   20     | . expr '-' expr
   21     | . expr '*' expr
   21     | expr '*' . expr
   22     | . expr '/' expr

    POSINT  shift, and go to state 27
    REAL    shift, and go to state 28
    '('     shift, and go to state 29

    expr  go to state 43


State 38

   16 expr: . POSINT
   17     | . REAL
   18     | . '(' expr ')'
   19     | . expr '+' expr
   20     | . expr '-' expr
   21     | . expr '*' expr
   22     | . expr '/' expr
   22     | expr '/' . expr

    POSINT  shift, and go to state 27
    REAL    shift, and go to state 28
    '('     shift, and go to state 29

    expr  go to state 44


State 39

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body '}'

    ')'  shift, and go to state 45


State 40

   18 expr: '(' expr ')' .

    $default  reduce using rule 18 (expr)


State 41

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .  ['-', '+', ')', ':', ',']
   21     | expr . '*' expr
   22     | expr . '/' expr

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 20 (expr)

    Conflict between rule 20 and token '-' resolved as reduce (%left '-').
    Conflict between rule 20 and token '+' resolved as reduce (%left '+').
    Conflict between rule 20 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 20 and token '/' resolved as shift ('-' < '/').


State 42

   19 expr: expr . '+' expr
   19     | expr '+' expr .  ['-', '+', ')', ':', ',']
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 19 (expr)

    Conflict between rule 19 and token '-' resolved as reduce (%left '-').
    Conflict between rule 19 and token '+' resolved as reduce (%left '+').
    Conflict between rule 19 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 19 and token '/' resolved as shift ('+' < '/').


State 43

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .  ['-', '+', '*', '/', ')', ':', ',']
   22     | expr . '/' expr

    $default  reduce using rule 21 (expr)

    Conflict between rule 21 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 21 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 21 and token '*' resolved as reduce (%left '*').
    Conflict between rule 21 and token '/' resolved as reduce (%left '/').


State 44

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .  ['-', '+', '*', '/', ')', ':', ',']

    $default  reduce using rule 22 (expr)

    Conflict between rule 22 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 22 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 22 and token '*' resolved as reduce (%left '*').
    Conflict between rule 22 and token '/' resolved as reduce (%left '/').


State 45

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body '}'

    ':'  shift, and go to state 46


State 46

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body '}'

    KW_INT  shift, and go to state 47


State 47

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body '}'

    ARROW  shift, and go to state 48


State 48

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body '}'

    '{'  shift, and go to state 49


State 49

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body '}'
   23 body: . %empty

    $default  reduce using rule 23 (body)

    body  go to state 50


State 50

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . '}'

    '}'  shift, and go to state 51


State 51

    1 program: var_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}' .

    $default  reduce using rule 1 (program)
