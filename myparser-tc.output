Terminals unused in grammar

   KW_TRUE
   KW_FALSE
   KW_IF
   KW_THEN
   KW_ELSE
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_RETURN
   KW_NOT
   KW_AND
   KW_OR
   TK_OP_EQ
   TK_OP_BIGGER
   TK_OP_BIGEQ
   TK_OP_NOTEQ


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    2        | KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    3 decl_types: var_decl
    4           | const_decl

    5 global_decl: global_decl decl_types
    6            | decl_types

    7 var_decl: KW_LET let_decl_body

    8 let_decl_body: let_decl_list ':' type_spec ';'

    9 let_decl_list: let_decl_list ',' let_decl_init
   10              | let_decl_init

   11 let_decl_init: decl_id
   12              | decl_id ASSIGN expr

   13 const_decl: KW_CONST const_decl_body

   14 const_decl_body: const_decl_list ':' type_spec ';'

   15 const_decl_list: const_decl_list ',' const_decl_init
   16                | const_decl_init

   17 const_decl_init: decl_id ASSIGN POSINT
   18                | decl_id ASSIGN REAL
   19                | decl_id ASSIGN STRING

   20 decl_id: IDENT
   21        | '[' ']' IDENT
   22        | IDENT '[' POSINT ']'

   23 type_spec: KW_INT
   24          | KW_REAL
   25          | KW_BOOL
   26          | KW_STRING

   27 expr: POSINT
   28     | REAL
   29     | STRING
   30     | '(' expr ')'
   31     | expr '+' expr
   32     | expr '-' expr
   33     | expr '*' expr
   34     | expr '/' expr

   35 func_decl_list: func_decl_list func_decl
   36               | func_decl

   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}'

   38 par_list: par_list ',' param
   39         | param

   40 param: decl_id ':' type_spec
   41      | %empty

   42 body: body command
   43     | command

   44 command: local_decl
   45        | decl_id ASSIGN expr ';'

   46 local_decl: local_decl var_decl
   47           | var_decl


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 2 30 37
')' (41) 1 2 30 37
'*' (42) 33
'+' (43) 31
',' (44) 9 15 38
'-' (45) 32
'/' (47) 34
':' (58) 1 2 8 14 37 40
';' (59) 8 14 45
'[' (91) 21 22
']' (93) 21 22
'{' (123) 1 2 37
'}' (125) 1 2 37
error (256)
KW_INT (258) 1 2 23
KW_REAL (259) 24
KW_STRING (260) 26
KW_TRUE (261)
KW_FALSE (262)
KW_BOOL (263) 25
KW_IF (264)
KW_THEN (265)
KW_ELSE (266)
KW_FI (267)
KW_WHILE (268)
KW_LOOP (269)
KW_POOL (270)
KW_CONST (271) 1 2 13 37
KW_LET (272) 7
KW_RETURN (273)
KW_NOT (274)
KW_AND (275)
KW_OR (276)
KW_START (277) 1 2
STRING (278) 19 29
IDENT (279) 20 21 22
POSINT (280) 17 22 27
REAL (281) 18 28
ASSIGN (282) 1 2 12 17 18 19 37 45
TK_OP_EQ (283)
TK_OP_BIGGER (284)
TK_OP_BIGEQ (285)
TK_OP_NOTEQ (286)
ARROW (287) 1 2 37


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1 2, on right: 0
decl_types (48)
    on left: 3 4, on right: 5 6
global_decl (49)
    on left: 5 6, on right: 1 5
var_decl (50)
    on left: 7, on right: 3 46 47
let_decl_body (51)
    on left: 8, on right: 7
let_decl_list (52)
    on left: 9 10, on right: 8 9
let_decl_init (53)
    on left: 11 12, on right: 9 10
const_decl (54)
    on left: 13, on right: 4
const_decl_body (55)
    on left: 14, on right: 13
const_decl_list (56)
    on left: 15 16, on right: 14 15
const_decl_init (57)
    on left: 17 18 19, on right: 15 16
decl_id (58)
    on left: 20 21 22, on right: 11 12 17 18 19 37 40 45
type_spec (59)
    on left: 23 24 25 26, on right: 8 14 37 40
expr (60)
    on left: 27 28 29 30 31 32 33 34, on right: 12 30 31 32 33 34 45
func_decl_list (61)
    on left: 35 36, on right: 1 35
func_decl (62)
    on left: 37, on right: 35 36
par_list (63)
    on left: 38 39, on right: 37 38
param (64)
    on left: 40 41, on right: 38 39
body (65)
    on left: 42 43, on right: 1 2 37 42
command (66)
    on left: 44 45, on right: 42 43
local_decl (67)
    on left: 46 47, on right: 44 46


State 0

    0 $accept: . program $end
    1 program: . global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    2        | . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    3 decl_types: . var_decl
    4           | . const_decl
    5 global_decl: . global_decl decl_types
    6            | . decl_types
    7 var_decl: . KW_LET let_decl_body
   13 const_decl: . KW_CONST const_decl_body

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program      go to state 3
    decl_types   go to state 4
    global_decl  go to state 5
    var_decl     go to state 6
    const_decl   go to state 7


State 1

    2 program: KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   13 const_decl: KW_CONST . const_decl_body
   14 const_decl_body: . const_decl_list ':' type_spec ';'
   15 const_decl_list: . const_decl_list ',' const_decl_init
   16                | . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    KW_START  shift, and go to state 8
    IDENT     shift, and go to state 9
    '['       shift, and go to state 10

    const_decl_body  go to state 11
    const_decl_list  go to state 12
    const_decl_init  go to state 13
    decl_id          go to state 14


State 2

    7 var_decl: KW_LET . let_decl_body
    8 let_decl_body: . let_decl_list ':' type_spec ';'
    9 let_decl_list: . let_decl_list ',' let_decl_init
   10              | . let_decl_init
   11 let_decl_init: . decl_id
   12              | . decl_id ASSIGN expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 9
    '['    shift, and go to state 10

    let_decl_body  go to state 15
    let_decl_list  go to state 16
    let_decl_init  go to state 17
    decl_id        go to state 18


State 3

    0 $accept: program . $end

    $end  shift, and go to state 19


State 4

    6 global_decl: decl_types .

    $default  reduce using rule 6 (global_decl)


State 5

    1 program: global_decl . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    3 decl_types: . var_decl
    4           | . const_decl
    5 global_decl: global_decl . decl_types
    7 var_decl: . KW_LET let_decl_body
   13 const_decl: . KW_CONST const_decl_body
   35 func_decl_list: . func_decl_list func_decl
   36               | . func_decl
   37 func_decl: . KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}'

    KW_CONST  shift, and go to state 20
    KW_LET    shift, and go to state 2

    decl_types      go to state 21
    var_decl        go to state 6
    const_decl      go to state 7
    func_decl_list  go to state 22
    func_decl       go to state 23


State 6

    3 decl_types: var_decl .

    $default  reduce using rule 3 (decl_types)


State 7

    4 decl_types: const_decl .

    $default  reduce using rule 4 (decl_types)


State 8

    2 program: KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    ASSIGN  shift, and go to state 24


State 9

   20 decl_id: IDENT .  [ASSIGN, ':', ',']
   22        | IDENT . '[' POSINT ']'

    '['  shift, and go to state 25

    $default  reduce using rule 20 (decl_id)


State 10

   21 decl_id: '[' . ']' IDENT

    ']'  shift, and go to state 26


State 11

   13 const_decl: KW_CONST const_decl_body .

    $default  reduce using rule 13 (const_decl)


State 12

   14 const_decl_body: const_decl_list . ':' type_spec ';'
   15 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 27
    ','  shift, and go to state 28


State 13

   16 const_decl_list: const_decl_init .

    $default  reduce using rule 16 (const_decl_list)


State 14

   17 const_decl_init: decl_id . ASSIGN POSINT
   18                | decl_id . ASSIGN REAL
   19                | decl_id . ASSIGN STRING

    ASSIGN  shift, and go to state 29


State 15

    7 var_decl: KW_LET let_decl_body .

    $default  reduce using rule 7 (var_decl)


State 16

    8 let_decl_body: let_decl_list . ':' type_spec ';'
    9 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 30
    ','  shift, and go to state 31


State 17

   10 let_decl_list: let_decl_init .

    $default  reduce using rule 10 (let_decl_list)


State 18

   11 let_decl_init: decl_id .  [':', ',']
   12              | decl_id . ASSIGN expr

    ASSIGN  shift, and go to state 32

    $default  reduce using rule 11 (let_decl_init)


State 19

    0 $accept: program $end .

    $default  accept


State 20

   13 const_decl: KW_CONST . const_decl_body
   14 const_decl_body: . const_decl_list ':' type_spec ';'
   15 const_decl_list: . const_decl_list ',' const_decl_init
   16                | . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   37 func_decl: KW_CONST . decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}'

    IDENT  shift, and go to state 9
    '['    shift, and go to state 10

    const_decl_body  go to state 11
    const_decl_list  go to state 12
    const_decl_init  go to state 13
    decl_id          go to state 33


State 21

    5 global_decl: global_decl decl_types .

    $default  reduce using rule 5 (global_decl)


State 22

    1 program: global_decl func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   35 func_decl_list: func_decl_list . func_decl
   37 func_decl: . KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}'

    KW_CONST  shift, and go to state 34

    func_decl  go to state 35


State 23

   36 func_decl_list: func_decl .

    $default  reduce using rule 36 (func_decl_list)


State 24

    2 program: KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body '}'

    '('  shift, and go to state 36


State 25

   22 decl_id: IDENT '[' . POSINT ']'

    POSINT  shift, and go to state 37


State 26

   21 decl_id: '[' ']' . IDENT

    IDENT  shift, and go to state 38


State 27

   14 const_decl_body: const_decl_list ':' . type_spec ';'
   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING

    KW_INT     shift, and go to state 39
    KW_REAL    shift, and go to state 40
    KW_STRING  shift, and go to state 41
    KW_BOOL    shift, and go to state 42

    type_spec  go to state 43


State 28

   15 const_decl_list: const_decl_list ',' . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 9
    '['    shift, and go to state 10

    const_decl_init  go to state 44
    decl_id          go to state 14


State 29

   17 const_decl_init: decl_id ASSIGN . POSINT
   18                | decl_id ASSIGN . REAL
   19                | decl_id ASSIGN . STRING

    STRING  shift, and go to state 45
    POSINT  shift, and go to state 46
    REAL    shift, and go to state 47


State 30

    8 let_decl_body: let_decl_list ':' . type_spec ';'
   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING

    KW_INT     shift, and go to state 39
    KW_REAL    shift, and go to state 40
    KW_STRING  shift, and go to state 41
    KW_BOOL    shift, and go to state 42

    type_spec  go to state 48


State 31

    9 let_decl_list: let_decl_list ',' . let_decl_init
   11 let_decl_init: . decl_id
   12              | . decl_id ASSIGN expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 9
    '['    shift, and go to state 10

    let_decl_init  go to state 49
    decl_id        go to state 18


State 32

   12 let_decl_init: decl_id ASSIGN . expr
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . '(' expr ')'
   31     | . expr '+' expr
   32     | . expr '-' expr
   33     | . expr '*' expr
   34     | . expr '/' expr

    STRING  shift, and go to state 50
    POSINT  shift, and go to state 51
    REAL    shift, and go to state 52
    '('     shift, and go to state 53

    expr  go to state 54


State 33

   17 const_decl_init: decl_id . ASSIGN POSINT
   18                | decl_id . ASSIGN REAL
   19                | decl_id . ASSIGN STRING
   37 func_decl: KW_CONST decl_id . ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}'

    ASSIGN  shift, and go to state 55


State 34

    1 program: global_decl func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   37 func_decl: KW_CONST . decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}'

    KW_START  shift, and go to state 56
    IDENT     shift, and go to state 9
    '['       shift, and go to state 10

    decl_id  go to state 57


State 35

   35 func_decl_list: func_decl_list func_decl .

    $default  reduce using rule 35 (func_decl_list)


State 36

    2 program: KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body '}'

    ')'  shift, and go to state 58


State 37

   22 decl_id: IDENT '[' POSINT . ']'

    ']'  shift, and go to state 59


State 38

   21 decl_id: '[' ']' IDENT .

    $default  reduce using rule 21 (decl_id)


State 39

   23 type_spec: KW_INT .

    $default  reduce using rule 23 (type_spec)


State 40

   24 type_spec: KW_REAL .

    $default  reduce using rule 24 (type_spec)


State 41

   26 type_spec: KW_STRING .

    $default  reduce using rule 26 (type_spec)


State 42

   25 type_spec: KW_BOOL .

    $default  reduce using rule 25 (type_spec)


State 43

   14 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 60


State 44

   15 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 15 (const_decl_list)


State 45

   19 const_decl_init: decl_id ASSIGN STRING .

    $default  reduce using rule 19 (const_decl_init)


State 46

   17 const_decl_init: decl_id ASSIGN POSINT .

    $default  reduce using rule 17 (const_decl_init)


State 47

   18 const_decl_init: decl_id ASSIGN REAL .

    $default  reduce using rule 18 (const_decl_init)


State 48

    8 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 61


State 49

    9 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 9 (let_decl_list)


State 50

   29 expr: STRING .

    $default  reduce using rule 29 (expr)


State 51

   27 expr: POSINT .

    $default  reduce using rule 27 (expr)


State 52

   28 expr: REAL .

    $default  reduce using rule 28 (expr)


State 53

   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . '(' expr ')'
   30     | '(' . expr ')'
   31     | . expr '+' expr
   32     | . expr '-' expr
   33     | . expr '*' expr
   34     | . expr '/' expr

    STRING  shift, and go to state 50
    POSINT  shift, and go to state 51
    REAL    shift, and go to state 52
    '('     shift, and go to state 53

    expr  go to state 62


State 54

   12 let_decl_init: decl_id ASSIGN expr .  [':', ',']
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr

    '-'  shift, and go to state 63
    '+'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 12 (let_decl_init)


State 55

   17 const_decl_init: decl_id ASSIGN . POSINT
   18                | decl_id ASSIGN . REAL
   19                | decl_id ASSIGN . STRING
   37 func_decl: KW_CONST decl_id ASSIGN . '(' par_list ')' ':' type_spec ARROW '{' body '}'

    STRING  shift, and go to state 45
    POSINT  shift, and go to state 46
    REAL    shift, and go to state 47
    '('     shift, and go to state 67


State 56

    1 program: global_decl func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    ASSIGN  shift, and go to state 68


State 57

   37 func_decl: KW_CONST decl_id . ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}'

    ASSIGN  shift, and go to state 69


State 58

    2 program: KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body '}'

    ':'  shift, and go to state 70


State 59

   22 decl_id: IDENT '[' POSINT ']' .

    $default  reduce using rule 22 (decl_id)


State 60

   14 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 14 (const_decl_body)


State 61

    8 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 8 (let_decl_body)


State 62

   30 expr: '(' expr . ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr

    '-'  shift, and go to state 63
    '+'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    ')'  shift, and go to state 71


State 63

   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . '(' expr ')'
   31     | . expr '+' expr
   32     | . expr '-' expr
   32     | expr '-' . expr
   33     | . expr '*' expr
   34     | . expr '/' expr

    STRING  shift, and go to state 50
    POSINT  shift, and go to state 51
    REAL    shift, and go to state 52
    '('     shift, and go to state 53

    expr  go to state 72


State 64

   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . '(' expr ')'
   31     | . expr '+' expr
   31     | expr '+' . expr
   32     | . expr '-' expr
   33     | . expr '*' expr
   34     | . expr '/' expr

    STRING  shift, and go to state 50
    POSINT  shift, and go to state 51
    REAL    shift, and go to state 52
    '('     shift, and go to state 53

    expr  go to state 73


State 65

   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . '(' expr ')'
   31     | . expr '+' expr
   32     | . expr '-' expr
   33     | . expr '*' expr
   33     | expr '*' . expr
   34     | . expr '/' expr

    STRING  shift, and go to state 50
    POSINT  shift, and go to state 51
    REAL    shift, and go to state 52
    '('     shift, and go to state 53

    expr  go to state 74


State 66

   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . '(' expr ')'
   31     | . expr '+' expr
   32     | . expr '-' expr
   33     | . expr '*' expr
   34     | . expr '/' expr
   34     | expr '/' . expr

    STRING  shift, and go to state 50
    POSINT  shift, and go to state 51
    REAL    shift, and go to state 52
    '('     shift, and go to state 53

    expr  go to state 75


State 67

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   37 func_decl: KW_CONST decl_id ASSIGN '(' . par_list ')' ':' type_spec ARROW '{' body '}'
   38 par_list: . par_list ',' param
   39         | . param
   40 param: . decl_id ':' type_spec
   41      | . %empty  [')', ',']

    IDENT  shift, and go to state 9
    '['    shift, and go to state 10

    $default  reduce using rule 41 (param)

    decl_id   go to state 76
    par_list  go to state 77
    param     go to state 78


State 68

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body '}'

    '('  shift, and go to state 79


State 69

   37 func_decl: KW_CONST decl_id ASSIGN . '(' par_list ')' ':' type_spec ARROW '{' body '}'

    '('  shift, and go to state 67


State 70

    2 program: KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body '}'

    KW_INT  shift, and go to state 80


State 71

   30 expr: '(' expr ')' .

    $default  reduce using rule 30 (expr)


State 72

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   32     | expr '-' expr .  ['-', '+', ')', ':', ';', ',']
   33     | expr . '*' expr
   34     | expr . '/' expr

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token '-' resolved as reduce (%left '-').
    Conflict between rule 32 and token '+' resolved as reduce (%left '+').
    Conflict between rule 32 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 32 and token '/' resolved as shift ('-' < '/').


State 73

   31 expr: expr . '+' expr
   31     | expr '+' expr .  ['-', '+', ')', ':', ';', ',']
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr

    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 31 (expr)

    Conflict between rule 31 and token '-' resolved as reduce (%left '-').
    Conflict between rule 31 and token '+' resolved as reduce (%left '+').
    Conflict between rule 31 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 31 and token '/' resolved as shift ('+' < '/').


State 74

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   33     | expr '*' expr .  ['-', '+', '*', '/', ')', ':', ';', ',']
   34     | expr . '/' expr

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 33 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 33 and token '*' resolved as reduce (%left '*').
    Conflict between rule 33 and token '/' resolved as reduce (%left '/').


State 75

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   34     | expr '/' expr .  ['-', '+', '*', '/', ')', ':', ';', ',']

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 34 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 34 and token '*' resolved as reduce (%left '*').
    Conflict between rule 34 and token '/' resolved as reduce (%left '/').


State 76

   40 param: decl_id . ':' type_spec

    ':'  shift, and go to state 81


State 77

   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list . ')' ':' type_spec ARROW '{' body '}'
   38 par_list: par_list . ',' param

    ')'  shift, and go to state 82
    ','  shift, and go to state 83


State 78

   39 par_list: param .

    $default  reduce using rule 39 (par_list)


State 79

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body '}'

    ')'  shift, and go to state 84


State 80

    2 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body '}'

    ARROW  shift, and go to state 85


State 81

   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING
   40 param: decl_id ':' . type_spec

    KW_INT     shift, and go to state 39
    KW_REAL    shift, and go to state 40
    KW_STRING  shift, and go to state 41
    KW_BOOL    shift, and go to state 42

    type_spec  go to state 86


State 82

   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' . ':' type_spec ARROW '{' body '}'

    ':'  shift, and go to state 87


State 83

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   38 par_list: par_list ',' . param
   40 param: . decl_id ':' type_spec
   41      | . %empty  [')', ',']

    IDENT  shift, and go to state 9
    '['    shift, and go to state 10

    $default  reduce using rule 41 (param)

    decl_id  go to state 76
    param    go to state 88


State 84

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body '}'

    ':'  shift, and go to state 89


State 85

    2 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body '}'

    '{'  shift, and go to state 90


State 86

   40 param: decl_id ':' type_spec .

    $default  reduce using rule 40 (param)


State 87

   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING
   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' ':' . type_spec ARROW '{' body '}'

    KW_INT     shift, and go to state 39
    KW_REAL    shift, and go to state 40
    KW_STRING  shift, and go to state 41
    KW_BOOL    shift, and go to state 42

    type_spec  go to state 91


State 88

   38 par_list: par_list ',' param .

    $default  reduce using rule 38 (par_list)


State 89

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body '}'

    KW_INT  shift, and go to state 92


State 90

    2 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   42 body: . body command
   43     | . command
   44 command: . local_decl
   45        | . decl_id ASSIGN expr ';'
   46 local_decl: . local_decl var_decl
   47           | . var_decl

    KW_LET  shift, and go to state 2
    IDENT   shift, and go to state 9
    '['     shift, and go to state 10

    var_decl    go to state 93
    decl_id     go to state 94
    body        go to state 95
    command     go to state 96
    local_decl  go to state 97


State 91

   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec . ARROW '{' body '}'

    ARROW  shift, and go to state 98


State 92

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body '}'

    ARROW  shift, and go to state 99


State 93

   47 local_decl: var_decl .

    $default  reduce using rule 47 (local_decl)


State 94

   45 command: decl_id . ASSIGN expr ';'

    ASSIGN  shift, and go to state 100


State 95

    2 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   42 body: body . command
   44 command: . local_decl
   45        | . decl_id ASSIGN expr ';'
   46 local_decl: . local_decl var_decl
   47           | . var_decl

    KW_LET  shift, and go to state 2
    IDENT   shift, and go to state 9
    '}'     shift, and go to state 101
    '['     shift, and go to state 10

    var_decl    go to state 93
    decl_id     go to state 94
    command     go to state 102
    local_decl  go to state 97


State 96

   43 body: command .

    $default  reduce using rule 43 (body)


State 97

    7 var_decl: . KW_LET let_decl_body
   44 command: local_decl .  [KW_LET, IDENT, '}', '[']
   46 local_decl: local_decl . var_decl

    KW_LET  shift, and go to state 2

    KW_LET    [reduce using rule 44 (command)]
    $default  reduce using rule 44 (command)

    var_decl  go to state 103


State 98

   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW . '{' body '}'

    '{'  shift, and go to state 104


State 99

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body '}'

    '{'  shift, and go to state 105


State 100

   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . '(' expr ')'
   31     | . expr '+' expr
   32     | . expr '-' expr
   33     | . expr '*' expr
   34     | . expr '/' expr
   45 command: decl_id ASSIGN . expr ';'

    STRING  shift, and go to state 50
    POSINT  shift, and go to state 51
    REAL    shift, and go to state 52
    '('     shift, and go to state 53

    expr  go to state 106


State 101

    2 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}' .

    $default  reduce using rule 2 (program)


State 102

   42 body: body command .

    $default  reduce using rule 42 (body)


State 103

   46 local_decl: local_decl var_decl .

    $default  reduce using rule 46 (local_decl)


State 104

    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' . body '}'
   42 body: . body command
   43     | . command
   44 command: . local_decl
   45        | . decl_id ASSIGN expr ';'
   46 local_decl: . local_decl var_decl
   47           | . var_decl

    KW_LET  shift, and go to state 2
    IDENT   shift, and go to state 9
    '['     shift, and go to state 10

    var_decl    go to state 93
    decl_id     go to state 94
    body        go to state 107
    command     go to state 96
    local_decl  go to state 97


State 105

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   42 body: . body command
   43     | . command
   44 command: . local_decl
   45        | . decl_id ASSIGN expr ';'
   46 local_decl: . local_decl var_decl
   47           | . var_decl

    KW_LET  shift, and go to state 2
    IDENT   shift, and go to state 9
    '['     shift, and go to state 10

    var_decl    go to state 93
    decl_id     go to state 94
    body        go to state 108
    command     go to state 96
    local_decl  go to state 97


State 106

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   45 command: decl_id ASSIGN expr . ';'

    '-'  shift, and go to state 63
    '+'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    ';'  shift, and go to state 109


State 107

    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body . '}'
   42 body: body . command
   44 command: . local_decl
   45        | . decl_id ASSIGN expr ';'
   46 local_decl: . local_decl var_decl
   47           | . var_decl

    KW_LET  shift, and go to state 2
    IDENT   shift, and go to state 9
    '}'     shift, and go to state 110
    '['     shift, and go to state 10

    var_decl    go to state 93
    decl_id     go to state 94
    command     go to state 102
    local_decl  go to state 97


State 108

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   42 body: body . command
   44 command: . local_decl
   45        | . decl_id ASSIGN expr ';'
   46 local_decl: . local_decl var_decl
   47           | . var_decl

    KW_LET  shift, and go to state 2
    IDENT   shift, and go to state 9
    '}'     shift, and go to state 111
    '['     shift, and go to state 10

    var_decl    go to state 93
    decl_id     go to state 94
    command     go to state 102
    local_decl  go to state 97


State 109

   45 command: decl_id ASSIGN expr ';' .

    $default  reduce using rule 45 (command)


State 110

   37 func_decl: KW_CONST decl_id ASSIGN '(' par_list ')' ':' type_spec ARROW '{' body '}' .

    $default  reduce using rule 37 (func_decl)


State 111

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}' .

    $default  reduce using rule 1 (program)
