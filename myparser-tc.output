State 180 conflicts: 5 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'

    3 decl_types: var_decl
    4           | const_decl

    5 global_decl: global_decl decl_types
    6            | decl_types

    7 var_decl: KW_LET let_decl_body

    8 let_decl_body: let_decl_list ':' type_spec ';'

    9 let_decl_list: let_decl_list ',' let_decl_init
   10              | let_decl_init

   11 let_decl_init: decl_id
   12              | decl_id ASSIGN expr

   13 const_decl: KW_CONST const_decl_body

   14 const_decl_body: const_decl_list ':' type_spec ';'

   15 const_decl_list: const_decl_list ',' const_decl_init
   16                | const_decl_init

   17 const_decl_init: decl_id ASSIGN POSINT
   18                | decl_id ASSIGN REAL
   19                | decl_id ASSIGN STRING

   20 decl_id: IDENT
   21        | '[' ']' IDENT
   22        | IDENT '[' POSINT ']'

   23 type_spec: KW_INT
   24          | KW_REAL
   25          | KW_BOOL
   26          | KW_STRING

   27 expr: POSINT
   28     | REAL
   29     | STRING
   30     | decl_id
   31     | func_call
   32     | '-' expr
   33     | '+' expr
   34     | KW_NOT expr
   35     | expr KW_OR expr
   36     | expr KW_AND expr
   37     | '(' expr ')'
   38     | expr '+' expr
   39     | expr '-' expr
   40     | expr '*' expr
   41     | expr '/' expr
   42     | expr '%' expr
   43     | expr TK_OP_BIGGER expr
   44     | expr TK_OP_BIGEQ expr
   45     | expr TK_OP_NOTEQ expr
   46     | expr TK_OP_EQ expr
   47     | KW_TRUE
   48     | KW_FALSE

   49 func_decl_list: func_decl_list func_decl
   50               | func_decl

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

   55 par_decl_list: par_decl_list ',' par_decl
   56              | par_decl

   57 par_decl: decl_id ':' type_spec
   58         | %empty

   59 body: body command
   60     | command

   61 command: decl_id ASSIGN expr ';'
   62        | func_call ';'
   63        | if_command
   64        | while_command

   65 local_decl: local_decl var_decl
   66           | var_decl

   67 func_call: IDENT '(' param_list ')'

   68 param_list: param_list ',' param
   69           | param

   70 param: expr
   71      | %empty

   72 return: KW_RETURN expr ';'
   73       | KW_RETURN ';'
   74       | %empty

   75 if_command: KW_IF expr KW_THEN body if_rest

   76 if_rest: KW_ELSE body KW_FI ';'
   77        | KW_ELSE KW_IF expr KW_THEN body if_rest
   78        | KW_FI ';'

   79 while_command: KW_WHILE expr KW_LOOP body KW_POOL ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 42
'(' (40) 1 2 37 51 52 53 54 67
')' (41) 1 2 37 51 52 53 54 67
'*' (42) 40
'+' (43) 33 38
',' (44) 9 15 55 68
'-' (45) 32 39
'/' (47) 41
':' (58) 1 2 8 14 51 52 53 54 57
';' (59) 8 14 51 52 53 54 61 62 72 73 76 78 79
'[' (91) 21 22
']' (93) 21 22
'{' (123) 1 2 51 52 53 54
'}' (125) 1 2 51 52 53 54
error (256)
KW_INT (258) 1 2 23
KW_REAL (259) 24
KW_STRING (260) 26
KW_TRUE (261) 47
KW_FALSE (262) 48
KW_BOOL (263) 25
KW_IF (264) 75 77
KW_THEN (265) 75 77
KW_ELSE (266) 76 77
KW_FI (267) 76 78
KW_WHILE (268) 79
KW_LOOP (269) 79
KW_POOL (270) 79
KW_CONST (271) 1 2 13 51 52 53 54
KW_LET (272) 7
KW_RETURN (273) 72 73
KW_NOT (274) 34
KW_AND (275) 36
KW_OR (276) 35
KW_START (277) 1 2
STRING (278) 19 29
IDENT (279) 20 21 22 67
POSINT (280) 17 22 27
REAL (281) 18 28
ASSIGN (282) 1 2 12 17 18 19 51 52 53 54 61
TK_OP_EQ (283) 46
TK_OP_BIGGER (284) 43
TK_OP_BIGEQ (285) 44
TK_OP_NOTEQ (286) 45
ARROW (287) 1 2 51 52 53 54


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0
decl_types (49)
    on left: 3 4, on right: 5 6
global_decl (50)
    on left: 5 6, on right: 1 2 5
var_decl (51)
    on left: 7, on right: 3 65 66
let_decl_body (52)
    on left: 8, on right: 7
let_decl_list (53)
    on left: 9 10, on right: 8 9
let_decl_init (54)
    on left: 11 12, on right: 9 10
const_decl (55)
    on left: 13, on right: 4
const_decl_body (56)
    on left: 14, on right: 13
const_decl_list (57)
    on left: 15 16, on right: 14 15
const_decl_init (58)
    on left: 17 18 19, on right: 15 16
decl_id (59)
    on left: 20 21 22, on right: 11 12 17 18 19 30 51 52 53 54 57 61
type_spec (60)
    on left: 23 24 25 26, on right: 8 14 51 52 53 54 57
expr (61)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48, on right: 12 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 61 70 72 75 77 79
func_decl_list (62)
    on left: 49 50, on right: 1 2 49
func_decl (63)
    on left: 51 52 53 54, on right: 49 50
par_decl_list (64)
    on left: 55 56, on right: 51 52 53 54 55
par_decl (65)
    on left: 57 58, on right: 55 56
body (66)
    on left: 59 60, on right: 1 2 51 54 59 75 76 77 79
command (67)
    on left: 61 62 63 64, on right: 59 60
local_decl (68)
    on left: 65 66, on right: 1 51 52 65
func_call (69)
    on left: 67, on right: 31 62
param_list (70)
    on left: 68 69, on right: 67 68
param (71)
    on left: 70 71, on right: 68 69
return (72)
    on left: 72 73 74, on right: 1 2 51 52 53 54
if_command (73)
    on left: 75, on right: 63
if_rest (74)
    on left: 76 77 78, on right: 75 77
while_command (75)
    on left: 79, on right: 64


State 0

    0 $accept: . program $end
    1 program: . global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | . global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
    3 decl_types: . var_decl
    4           | . const_decl
    5 global_decl: . global_decl decl_types
    6            | . decl_types
    7 var_decl: . KW_LET let_decl_body
   13 const_decl: . KW_CONST const_decl_body

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program      go to state 3
    decl_types   go to state 4
    global_decl  go to state 5
    var_decl     go to state 6
    const_decl   go to state 7


State 1

   13 const_decl: KW_CONST . const_decl_body
   14 const_decl_body: . const_decl_list ':' type_spec ';'
   15 const_decl_list: . const_decl_list ',' const_decl_init
   16                | . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    const_decl_body  go to state 10
    const_decl_list  go to state 11
    const_decl_init  go to state 12
    decl_id          go to state 13


State 2

    7 var_decl: KW_LET . let_decl_body
    8 let_decl_body: . let_decl_list ':' type_spec ';'
    9 let_decl_list: . let_decl_list ',' let_decl_init
   10              | . let_decl_init
   11 let_decl_init: . decl_id
   12              | . decl_id ASSIGN expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    let_decl_body  go to state 14
    let_decl_list  go to state 15
    let_decl_init  go to state 16
    decl_id        go to state 17


State 3

    0 $accept: program . $end

    $end  shift, and go to state 18


State 4

    6 global_decl: decl_types .

    $default  reduce using rule 6 (global_decl)


State 5

    1 program: global_decl . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
    3 decl_types: . var_decl
    4           | . const_decl
    5 global_decl: global_decl . decl_types
    7 var_decl: . KW_LET let_decl_body
   13 const_decl: . KW_CONST const_decl_body
   49 func_decl_list: . func_decl_list func_decl
   50               | . func_decl
   51 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    KW_CONST  shift, and go to state 19
    KW_LET    shift, and go to state 2

    decl_types      go to state 20
    var_decl        go to state 6
    const_decl      go to state 7
    func_decl_list  go to state 21
    func_decl       go to state 22


State 6

    3 decl_types: var_decl .

    $default  reduce using rule 3 (decl_types)


State 7

    4 decl_types: const_decl .

    $default  reduce using rule 4 (decl_types)


State 8

   20 decl_id: IDENT .  [ASSIGN, ':', ',']
   22        | IDENT . '[' POSINT ']'

    '['  shift, and go to state 23

    $default  reduce using rule 20 (decl_id)


State 9

   21 decl_id: '[' . ']' IDENT

    ']'  shift, and go to state 24


State 10

   13 const_decl: KW_CONST const_decl_body .

    $default  reduce using rule 13 (const_decl)


State 11

   14 const_decl_body: const_decl_list . ':' type_spec ';'
   15 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 25
    ','  shift, and go to state 26


State 12

   16 const_decl_list: const_decl_init .

    $default  reduce using rule 16 (const_decl_list)


State 13

   17 const_decl_init: decl_id . ASSIGN POSINT
   18                | decl_id . ASSIGN REAL
   19                | decl_id . ASSIGN STRING

    ASSIGN  shift, and go to state 27


State 14

    7 var_decl: KW_LET let_decl_body .

    $default  reduce using rule 7 (var_decl)


State 15

    8 let_decl_body: let_decl_list . ':' type_spec ';'
    9 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 28
    ','  shift, and go to state 29


State 16

   10 let_decl_list: let_decl_init .

    $default  reduce using rule 10 (let_decl_list)


State 17

   11 let_decl_init: decl_id .  [':', ',']
   12              | decl_id . ASSIGN expr

    ASSIGN  shift, and go to state 30

    $default  reduce using rule 11 (let_decl_init)


State 18

    0 $accept: program $end .

    $default  accept


State 19

   13 const_decl: KW_CONST . const_decl_body
   14 const_decl_body: . const_decl_list ':' type_spec ';'
   15 const_decl_list: . const_decl_list ',' const_decl_init
   16                | . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   51 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    const_decl_body  go to state 10
    const_decl_list  go to state 11
    const_decl_init  go to state 12
    decl_id          go to state 31


State 20

    5 global_decl: global_decl decl_types .

    $default  reduce using rule 5 (global_decl)


State 21

    1 program: global_decl func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
   49 func_decl_list: func_decl_list . func_decl
   51 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    KW_CONST  shift, and go to state 32

    func_decl  go to state 33


State 22

   50 func_decl_list: func_decl .

    $default  reduce using rule 50 (func_decl_list)


State 23

   22 decl_id: IDENT '[' . POSINT ']'

    POSINT  shift, and go to state 34


State 24

   21 decl_id: '[' ']' . IDENT

    IDENT  shift, and go to state 35


State 25

   14 const_decl_body: const_decl_list ':' . type_spec ';'
   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING

    KW_INT     shift, and go to state 36
    KW_REAL    shift, and go to state 37
    KW_STRING  shift, and go to state 38
    KW_BOOL    shift, and go to state 39

    type_spec  go to state 40


State 26

   15 const_decl_list: const_decl_list ',' . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    const_decl_init  go to state 41
    decl_id          go to state 13


State 27

   17 const_decl_init: decl_id ASSIGN . POSINT
   18                | decl_id ASSIGN . REAL
   19                | decl_id ASSIGN . STRING

    STRING  shift, and go to state 42
    POSINT  shift, and go to state 43
    REAL    shift, and go to state 44


State 28

    8 let_decl_body: let_decl_list ':' . type_spec ';'
   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING

    KW_INT     shift, and go to state 36
    KW_REAL    shift, and go to state 37
    KW_STRING  shift, and go to state 38
    KW_BOOL    shift, and go to state 39

    type_spec  go to state 45


State 29

    9 let_decl_list: let_decl_list ',' . let_decl_init
   11 let_decl_init: . decl_id
   12              | . decl_id ASSIGN expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    let_decl_init  go to state 46
    decl_id        go to state 17


State 30

   12 let_decl_init: decl_id ASSIGN . expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 58
    func_call  go to state 59


State 31

   17 const_decl_init: decl_id . ASSIGN POSINT
   18                | decl_id . ASSIGN REAL
   19                | decl_id . ASSIGN STRING
   51 func_decl: KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    ASSIGN  shift, and go to state 60


State 32

    1 program: global_decl func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   51 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    KW_START  shift, and go to state 61
    IDENT     shift, and go to state 8
    '['       shift, and go to state 9

    decl_id  go to state 62


State 33

   49 func_decl_list: func_decl_list func_decl .

    $default  reduce using rule 49 (func_decl_list)


State 34

   22 decl_id: IDENT '[' POSINT . ']'

    ']'  shift, and go to state 63


State 35

   21 decl_id: '[' ']' IDENT .

    $default  reduce using rule 21 (decl_id)


State 36

   23 type_spec: KW_INT .

    $default  reduce using rule 23 (type_spec)


State 37

   24 type_spec: KW_REAL .

    $default  reduce using rule 24 (type_spec)


State 38

   26 type_spec: KW_STRING .

    $default  reduce using rule 26 (type_spec)


State 39

   25 type_spec: KW_BOOL .

    $default  reduce using rule 25 (type_spec)


State 40

   14 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 64


State 41

   15 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 15 (const_decl_list)


State 42

   19 const_decl_init: decl_id ASSIGN STRING .

    $default  reduce using rule 19 (const_decl_init)


State 43

   17 const_decl_init: decl_id ASSIGN POSINT .

    $default  reduce using rule 17 (const_decl_init)


State 44

   18 const_decl_init: decl_id ASSIGN REAL .

    $default  reduce using rule 18 (const_decl_init)


State 45

    8 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 65


State 46

    9 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 9 (let_decl_list)


State 47

   47 expr: KW_TRUE .

    $default  reduce using rule 47 (expr)


State 48

   48 expr: KW_FALSE .

    $default  reduce using rule 48 (expr)


State 49

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   34     | KW_NOT . expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 66
    func_call  go to state 59


State 50

   29 expr: STRING .

    $default  reduce using rule 29 (expr)


State 51

   20 decl_id: IDENT .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ASSIGN, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   22        | IDENT . '[' POSINT ']'
   67 func_call: IDENT . '(' param_list ')'

    '('  shift, and go to state 67
    '['  shift, and go to state 23

    $default  reduce using rule 20 (decl_id)


State 52

   27 expr: POSINT .

    $default  reduce using rule 27 (expr)


State 53

   28 expr: REAL .

    $default  reduce using rule 28 (expr)


State 54

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   33     | '+' . expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 68
    func_call  go to state 59


State 55

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   32     | '-' . expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 69
    func_call  go to state 59


State 56

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   37     | '(' . expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 70
    func_call  go to state 59


State 57

   30 expr: decl_id .

    $default  reduce using rule 30 (expr)


State 58

   12 let_decl_init: decl_id ASSIGN expr .  [':', ',']
   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81

    $default  reduce using rule 12 (let_decl_init)


State 59

   31 expr: func_call .

    $default  reduce using rule 31 (expr)


State 60

   17 const_decl_init: decl_id ASSIGN . POSINT
   18                | decl_id ASSIGN . REAL
   19                | decl_id ASSIGN . STRING
   51 func_decl: KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    STRING  shift, and go to state 42
    POSINT  shift, and go to state 43
    REAL    shift, and go to state 44
    '('     shift, and go to state 82


State 61

    1 program: global_decl func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'

    ASSIGN  shift, and go to state 83


State 62

   51 func_decl: KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    ASSIGN  shift, and go to state 84


State 63

   22 decl_id: IDENT '[' POSINT ']' .

    $default  reduce using rule 22 (decl_id)


State 64

   14 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 14 (const_decl_body)


State 65

    8 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 8 (let_decl_body)


State 66

   34 expr: KW_NOT expr .  [KW_THEN, KW_LOOP, ')', ':', ';', ',']
   35     | expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token KW_AND resolved as shift (KW_NOT < KW_AND).
    Conflict between rule 34 and token KW_OR resolved as shift (KW_NOT < KW_OR).
    Conflict between rule 34 and token TK_OP_EQ resolved as shift (KW_NOT < TK_OP_EQ).
    Conflict between rule 34 and token TK_OP_BIGGER resolved as shift (KW_NOT < TK_OP_BIGGER).
    Conflict between rule 34 and token TK_OP_BIGEQ resolved as shift (KW_NOT < TK_OP_BIGEQ).
    Conflict between rule 34 and token TK_OP_NOTEQ resolved as shift (KW_NOT < TK_OP_NOTEQ).
    Conflict between rule 34 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 34 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 34 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 34 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 34 and token '%' resolved as shift (KW_NOT < '%').


State 67

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'
   67          | IDENT '(' . param_list ')'
   68 param_list: . param_list ',' param
   69           | . param
   70 param: . expr
   71      | . %empty  [')', ',']

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    $default  reduce using rule 71 (param)

    decl_id     go to state 57
    expr        go to state 85
    func_call   go to state 59
    param_list  go to state 86
    param       go to state 87


State 68

   33 expr: '+' expr .  [KW_THEN, KW_LOOP, '+', '-', ')', ':', ';', ',']
   35     | expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token KW_AND resolved as shift ('+' < KW_AND).
    Conflict between rule 33 and token KW_OR resolved as shift ('+' < KW_OR).
    Conflict between rule 33 and token TK_OP_EQ resolved as shift ('+' < TK_OP_EQ).
    Conflict between rule 33 and token TK_OP_BIGGER resolved as shift ('+' < TK_OP_BIGGER).
    Conflict between rule 33 and token TK_OP_BIGEQ resolved as shift ('+' < TK_OP_BIGEQ).
    Conflict between rule 33 and token TK_OP_NOTEQ resolved as shift ('+' < TK_OP_NOTEQ).
    Conflict between rule 33 and token '+' resolved as reduce (%left '+').
    Conflict between rule 33 and token '-' resolved as reduce (%left '-').
    Conflict between rule 33 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 33 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 33 and token '%' resolved as shift ('+' < '%').


State 69

   32 expr: '-' expr .  [KW_THEN, KW_LOOP, '+', '-', ')', ':', ';', ',']
   35     | expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token KW_AND resolved as shift ('-' < KW_AND).
    Conflict between rule 32 and token KW_OR resolved as shift ('-' < KW_OR).
    Conflict between rule 32 and token TK_OP_EQ resolved as shift ('-' < TK_OP_EQ).
    Conflict between rule 32 and token TK_OP_BIGGER resolved as shift ('-' < TK_OP_BIGGER).
    Conflict between rule 32 and token TK_OP_BIGEQ resolved as shift ('-' < TK_OP_BIGEQ).
    Conflict between rule 32 and token TK_OP_NOTEQ resolved as shift ('-' < TK_OP_NOTEQ).
    Conflict between rule 32 and token '+' resolved as reduce (%left '+').
    Conflict between rule 32 and token '-' resolved as reduce (%left '-').
    Conflict between rule 32 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 32 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 32 and token '%' resolved as shift ('-' < '%').


State 70

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   37     | '(' expr . ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81
    ')'           shift, and go to state 88


State 71

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   36     | expr KW_AND . expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 89
    func_call  go to state 59


State 72

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   35     | expr KW_OR . expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 90
    func_call  go to state 59


State 73

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   46     | expr TK_OP_EQ . expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 91
    func_call  go to state 59


State 74

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   43     | expr TK_OP_BIGGER . expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 92
    func_call  go to state 59


State 75

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   44     | expr TK_OP_BIGEQ . expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 93
    func_call  go to state 59


State 76

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   45     | expr TK_OP_NOTEQ . expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 94
    func_call  go to state 59


State 77

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   38     | expr '+' . expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 95
    func_call  go to state 59


State 78

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   39     | expr '-' . expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 96
    func_call  go to state 59


State 79

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   40     | expr '*' . expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 97
    func_call  go to state 59


State 80

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   41     | expr '/' . expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 98
    func_call  go to state 59


State 81

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   42     | expr '%' . expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 99
    func_call  go to state 59


State 82

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   51 func_decl: KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'
   55 par_decl_list: . par_decl_list ',' par_decl
   56              | . par_decl
   57 par_decl: . decl_id ':' type_spec
   58         | . %empty  [')', ',']

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    $default  reduce using rule 58 (par_decl)

    decl_id        go to state 100
    par_decl_list  go to state 101
    par_decl       go to state 102


State 83

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body return '}'

    '('  shift, and go to state 103


State 84

   51 func_decl: KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    '('  shift, and go to state 82


State 85

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr
   70 param: expr .  [')', ',']

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81

    $default  reduce using rule 70 (param)


State 86

   67 func_call: IDENT '(' param_list . ')'
   68 param_list: param_list . ',' param

    ')'  shift, and go to state 104
    ','  shift, and go to state 105


State 87

   69 param_list: param .

    $default  reduce using rule 69 (param_list)


State 88

   37 expr: '(' expr ')' .

    $default  reduce using rule 37 (expr)


State 89

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   36     | expr KW_AND expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 36 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 36 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < KW_AND).
    Conflict between rule 36 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < KW_AND).
    Conflict between rule 36 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < KW_AND).
    Conflict between rule 36 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < KW_AND).
    Conflict between rule 36 and token '+' resolved as reduce ('+' < KW_AND).
    Conflict between rule 36 and token '-' resolved as reduce ('-' < KW_AND).
    Conflict between rule 36 and token '*' resolved as reduce ('*' < KW_AND).
    Conflict between rule 36 and token '/' resolved as reduce ('/' < KW_AND).
    Conflict between rule 36 and token '%' resolved as reduce ('%' < KW_AND).


State 90

   35 expr: expr . KW_OR expr
   35     | expr KW_OR expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 35 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 35 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < KW_OR).
    Conflict between rule 35 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < KW_OR).
    Conflict between rule 35 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < KW_OR).
    Conflict between rule 35 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < KW_OR).
    Conflict between rule 35 and token '+' resolved as reduce ('+' < KW_OR).
    Conflict between rule 35 and token '-' resolved as reduce ('-' < KW_OR).
    Conflict between rule 35 and token '*' resolved as reduce ('*' < KW_OR).
    Conflict between rule 35 and token '/' resolved as reduce ('/' < KW_OR).
    Conflict between rule 35 and token '%' resolved as reduce ('%' < KW_OR).


State 91

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr
   46     | expr TK_OP_EQ expr .  [KW_THEN, KW_LOOP, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',']

    KW_AND  shift, and go to state 71
    KW_OR   shift, and go to state 72

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token KW_AND resolved as shift (TK_OP_EQ < KW_AND).
    Conflict between rule 46 and token KW_OR resolved as shift (TK_OP_EQ < KW_OR).
    Conflict between rule 46 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 46 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 46 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 46 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 46 and token '+' resolved as reduce ('+' < TK_OP_EQ).
    Conflict between rule 46 and token '-' resolved as reduce ('-' < TK_OP_EQ).
    Conflict between rule 46 and token '*' resolved as reduce ('*' < TK_OP_EQ).
    Conflict between rule 46 and token '/' resolved as reduce ('/' < TK_OP_EQ).
    Conflict between rule 46 and token '%' resolved as reduce ('%' < TK_OP_EQ).


State 92

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   43     | expr TK_OP_BIGGER expr .  [KW_THEN, KW_LOOP, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND  shift, and go to state 71
    KW_OR   shift, and go to state 72

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token KW_AND resolved as shift (TK_OP_BIGGER < KW_AND).
    Conflict between rule 43 and token KW_OR resolved as shift (TK_OP_BIGGER < KW_OR).
    Conflict between rule 43 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 43 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 43 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 43 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 43 and token '+' resolved as reduce ('+' < TK_OP_BIGGER).
    Conflict between rule 43 and token '-' resolved as reduce ('-' < TK_OP_BIGGER).
    Conflict between rule 43 and token '*' resolved as reduce ('*' < TK_OP_BIGGER).
    Conflict between rule 43 and token '/' resolved as reduce ('/' < TK_OP_BIGGER).
    Conflict between rule 43 and token '%' resolved as reduce ('%' < TK_OP_BIGGER).


State 93

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   44     | expr TK_OP_BIGEQ expr .  [KW_THEN, KW_LOOP, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND  shift, and go to state 71
    KW_OR   shift, and go to state 72

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token KW_AND resolved as shift (TK_OP_BIGEQ < KW_AND).
    Conflict between rule 44 and token KW_OR resolved as shift (TK_OP_BIGEQ < KW_OR).
    Conflict between rule 44 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 44 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 44 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 44 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 44 and token '+' resolved as reduce ('+' < TK_OP_BIGEQ).
    Conflict between rule 44 and token '-' resolved as reduce ('-' < TK_OP_BIGEQ).
    Conflict between rule 44 and token '*' resolved as reduce ('*' < TK_OP_BIGEQ).
    Conflict between rule 44 and token '/' resolved as reduce ('/' < TK_OP_BIGEQ).
    Conflict between rule 44 and token '%' resolved as reduce ('%' < TK_OP_BIGEQ).


State 94

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   45     | expr TK_OP_NOTEQ expr .  [KW_THEN, KW_LOOP, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   46     | expr . TK_OP_EQ expr

    KW_AND  shift, and go to state 71
    KW_OR   shift, and go to state 72

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token KW_AND resolved as shift (TK_OP_NOTEQ < KW_AND).
    Conflict between rule 45 and token KW_OR resolved as shift (TK_OP_NOTEQ < KW_OR).
    Conflict between rule 45 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 45 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 45 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 45 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 45 and token '+' resolved as reduce ('+' < TK_OP_NOTEQ).
    Conflict between rule 45 and token '-' resolved as reduce ('-' < TK_OP_NOTEQ).
    Conflict between rule 45 and token '*' resolved as reduce ('*' < TK_OP_NOTEQ).
    Conflict between rule 45 and token '/' resolved as reduce ('/' < TK_OP_NOTEQ).
    Conflict between rule 45 and token '%' resolved as reduce ('%' < TK_OP_NOTEQ).


State 95

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   38     | expr '+' expr .  [KW_THEN, KW_LOOP, '+', '-', ')', ':', ';', ',']
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token KW_AND resolved as shift ('+' < KW_AND).
    Conflict between rule 38 and token KW_OR resolved as shift ('+' < KW_OR).
    Conflict between rule 38 and token TK_OP_EQ resolved as shift ('+' < TK_OP_EQ).
    Conflict between rule 38 and token TK_OP_BIGGER resolved as shift ('+' < TK_OP_BIGGER).
    Conflict between rule 38 and token TK_OP_BIGEQ resolved as shift ('+' < TK_OP_BIGEQ).
    Conflict between rule 38 and token TK_OP_NOTEQ resolved as shift ('+' < TK_OP_NOTEQ).
    Conflict between rule 38 and token '+' resolved as reduce (%left '+').
    Conflict between rule 38 and token '-' resolved as reduce (%left '-').
    Conflict between rule 38 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 38 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 38 and token '%' resolved as shift ('+' < '%').


State 96

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   39     | expr '-' expr .  [KW_THEN, KW_LOOP, '+', '-', ')', ':', ';', ',']
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token KW_AND resolved as shift ('-' < KW_AND).
    Conflict between rule 39 and token KW_OR resolved as shift ('-' < KW_OR).
    Conflict between rule 39 and token TK_OP_EQ resolved as shift ('-' < TK_OP_EQ).
    Conflict between rule 39 and token TK_OP_BIGGER resolved as shift ('-' < TK_OP_BIGGER).
    Conflict between rule 39 and token TK_OP_BIGEQ resolved as shift ('-' < TK_OP_BIGEQ).
    Conflict between rule 39 and token TK_OP_NOTEQ resolved as shift ('-' < TK_OP_NOTEQ).
    Conflict between rule 39 and token '+' resolved as reduce (%left '+').
    Conflict between rule 39 and token '-' resolved as reduce (%left '-').
    Conflict between rule 39 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 39 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 39 and token '%' resolved as shift ('-' < '%').


State 97

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   40     | expr '*' expr .  [KW_THEN, KW_LOOP, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token KW_AND resolved as shift ('*' < KW_AND).
    Conflict between rule 40 and token KW_OR resolved as shift ('*' < KW_OR).
    Conflict between rule 40 and token TK_OP_EQ resolved as shift ('*' < TK_OP_EQ).
    Conflict between rule 40 and token TK_OP_BIGGER resolved as shift ('*' < TK_OP_BIGGER).
    Conflict between rule 40 and token TK_OP_BIGEQ resolved as shift ('*' < TK_OP_BIGEQ).
    Conflict between rule 40 and token TK_OP_NOTEQ resolved as shift ('*' < TK_OP_NOTEQ).
    Conflict between rule 40 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 40 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 40 and token '*' resolved as reduce (%left '*').
    Conflict between rule 40 and token '/' resolved as reduce (%left '/').
    Conflict between rule 40 and token '%' resolved as reduce (%left '%').


State 98

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   41     | expr '/' expr .  [KW_THEN, KW_LOOP, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token KW_AND resolved as shift ('/' < KW_AND).
    Conflict between rule 41 and token KW_OR resolved as shift ('/' < KW_OR).
    Conflict between rule 41 and token TK_OP_EQ resolved as shift ('/' < TK_OP_EQ).
    Conflict between rule 41 and token TK_OP_BIGGER resolved as shift ('/' < TK_OP_BIGGER).
    Conflict between rule 41 and token TK_OP_BIGEQ resolved as shift ('/' < TK_OP_BIGEQ).
    Conflict between rule 41 and token TK_OP_NOTEQ resolved as shift ('/' < TK_OP_NOTEQ).
    Conflict between rule 41 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 41 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 41 and token '*' resolved as reduce (%left '*').
    Conflict between rule 41 and token '/' resolved as reduce (%left '/').
    Conflict between rule 41 and token '%' resolved as reduce (%left '%').


State 99

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   42     | expr '%' expr .  [KW_THEN, KW_LOOP, '+', '-', '*', '/', '%', ')', ':', ';', ',']
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token KW_AND resolved as shift ('%' < KW_AND).
    Conflict between rule 42 and token KW_OR resolved as shift ('%' < KW_OR).
    Conflict between rule 42 and token TK_OP_EQ resolved as shift ('%' < TK_OP_EQ).
    Conflict between rule 42 and token TK_OP_BIGGER resolved as shift ('%' < TK_OP_BIGGER).
    Conflict between rule 42 and token TK_OP_BIGEQ resolved as shift ('%' < TK_OP_BIGEQ).
    Conflict between rule 42 and token TK_OP_NOTEQ resolved as shift ('%' < TK_OP_NOTEQ).
    Conflict between rule 42 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 42 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 42 and token '*' resolved as reduce (%left '*').
    Conflict between rule 42 and token '/' resolved as reduce (%left '/').
    Conflict between rule 42 and token '%' resolved as reduce (%left '%').


State 100

   57 par_decl: decl_id . ':' type_spec

    ':'  shift, and go to state 106


State 101

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' body return '}' ';'
   55 par_decl_list: par_decl_list . ',' par_decl

    ')'  shift, and go to state 107
    ','  shift, and go to state 108


State 102

   56 par_decl_list: par_decl .

    $default  reduce using rule 56 (par_decl_list)


State 103

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body return '}'

    ')'  shift, and go to state 109


State 104

   67 func_call: IDENT '(' param_list ')' .

    $default  reduce using rule 67 (func_call)


State 105

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'
   68 param_list: param_list ',' . param
   70 param: . expr
   71      | . %empty  [')', ',']

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    $default  reduce using rule 71 (param)

    decl_id    go to state 57
    expr       go to state 85
    func_call  go to state 59
    param      go to state 110


State 106

   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING
   57 par_decl: decl_id ':' . type_spec

    KW_INT     shift, and go to state 36
    KW_REAL    shift, and go to state 37
    KW_STRING  shift, and go to state 38
    KW_BOOL    shift, and go to state 39

    type_spec  go to state 111


State 107

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' body return '}' ';'

    ':'  shift, and go to state 112


State 108

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   55 par_decl_list: par_decl_list ',' . par_decl
   57 par_decl: . decl_id ':' type_spec
   58         | . %empty  [')', ',']

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    $default  reduce using rule 58 (par_decl)

    decl_id   go to state 100
    par_decl  go to state 113


State 109

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body return '}'

    ':'  shift, and go to state 114


State 110

   68 param_list: param_list ',' param .

    $default  reduce using rule 68 (param_list)


State 111

   57 par_decl: decl_id ':' type_spec .

    $default  reduce using rule 57 (par_decl)


State 112

   23 type_spec: . KW_INT
   24          | . KW_REAL
   25          | . KW_BOOL
   26          | . KW_STRING
   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' body return '}' ';'

    KW_INT     shift, and go to state 36
    KW_REAL    shift, and go to state 37
    KW_STRING  shift, and go to state 38
    KW_BOOL    shift, and go to state 39

    type_spec  go to state 115


State 113

   55 par_decl_list: par_decl_list ',' par_decl .

    $default  reduce using rule 55 (par_decl_list)


State 114

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body return '}'

    KW_INT  shift, and go to state 116


State 115

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' body return '}' ';'

    ARROW  shift, and go to state 117


State 116

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body return '}'

    ARROW  shift, and go to state 118


State 117

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' body return '}' ';'

    '{'  shift, and go to state 119


State 118

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body return '}'

    '{'  shift, and go to state 120


State 119

    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . local_decl body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . local_decl return '}' ';'
   53          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . body return '}' ';'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   65 local_decl: . local_decl var_decl
   66           | . var_decl
   67 func_call: . IDENT '(' param_list ')'
   72 return: . KW_RETURN expr ';'
   73       | . KW_RETURN ';'
   74       | . %empty  ['}']
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 121
    KW_WHILE   shift, and go to state 122
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 123
    IDENT      shift, and go to state 51
    '['        shift, and go to state 9

    $default  reduce using rule 74 (return)

    var_decl       go to state 124
    decl_id        go to state 125
    body           go to state 126
    command        go to state 127
    local_decl     go to state 128
    func_call      go to state 129
    return         go to state 130
    if_command     go to state 131
    while_command  go to state 132


State 120

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body return '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   65 local_decl: . local_decl var_decl
   66           | . var_decl
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_WHILE  shift, and go to state 122
    KW_LET    shift, and go to state 2
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    var_decl       go to state 124
    decl_id        go to state 125
    body           go to state 133
    command        go to state 127
    local_decl     go to state 134
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 121

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: KW_IF . expr KW_THEN body if_rest

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 135
    func_call  go to state 59


State 122

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'
   79 while_command: KW_WHILE . expr KW_LOOP body KW_POOL ';'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 136
    func_call  go to state 59


State 123

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'
   72 return: KW_RETURN . expr ';'
   73       | KW_RETURN . ';'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    ';'       shift, and go to state 137
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 138
    func_call  go to state 59


State 124

   66 local_decl: var_decl .

    $default  reduce using rule 66 (local_decl)


State 125

   61 command: decl_id . ASSIGN expr ';'

    ASSIGN  shift, and go to state 139


State 126

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   54 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body . return '}' ';'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   72 return: . KW_RETURN expr ';'
   73       | . KW_RETURN ';'
   74       | . %empty  ['}']
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 121
    KW_WHILE   shift, and go to state 122
    KW_RETURN  shift, and go to state 123
    IDENT      shift, and go to state 51
    '['        shift, and go to state 9

    $default  reduce using rule 74 (return)

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    return         go to state 141
    if_command     go to state 131
    while_command  go to state 132


State 127

   60 body: command .

    $default  reduce using rule 60 (body)


State 128

    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl . body return '}' ';'
   52          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl . return '}' ';'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   65 local_decl: local_decl . var_decl
   67 func_call: . IDENT '(' param_list ')'
   72 return: . KW_RETURN expr ';'
   73       | . KW_RETURN ';'
   74       | . %empty  ['}']
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 121
    KW_WHILE   shift, and go to state 122
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 123
    IDENT      shift, and go to state 51
    '['        shift, and go to state 9

    $default  reduce using rule 74 (return)

    var_decl       go to state 142
    decl_id        go to state 125
    body           go to state 143
    command        go to state 127
    func_call      go to state 129
    return         go to state 144
    if_command     go to state 131
    while_command  go to state 132


State 129

   62 command: func_call . ';'

    ';'  shift, and go to state 145


State 130

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return . '}' ';'

    '}'  shift, and go to state 146


State 131

   63 command: if_command .

    $default  reduce using rule 63 (command)


State 132

   64 command: while_command .

    $default  reduce using rule 64 (command)


State 133

    2 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . return '}'
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   72 return: . KW_RETURN expr ';'
   73       | . KW_RETURN ';'
   74       | . %empty  ['}']
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 121
    KW_WHILE   shift, and go to state 122
    KW_RETURN  shift, and go to state 123
    IDENT      shift, and go to state 51
    '['        shift, and go to state 9

    $default  reduce using rule 74 (return)

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    return         go to state 147
    if_command     go to state 131
    while_command  go to state 132


State 134

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl . body return '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   65 local_decl: local_decl . var_decl
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_WHILE  shift, and go to state 122
    KW_LET    shift, and go to state 2
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    var_decl       go to state 142
    decl_id        go to state 125
    body           go to state 148
    command        go to state 127
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 135

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr
   75 if_command: KW_IF expr . KW_THEN body if_rest

    KW_THEN       shift, and go to state 149
    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81


State 136

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr
   79 while_command: KW_WHILE expr . KW_LOOP body KW_POOL ';'

    KW_LOOP       shift, and go to state 150
    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81


State 137

   73 return: KW_RETURN ';' .

    $default  reduce using rule 73 (return)


State 138

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr
   72 return: KW_RETURN expr . ';'

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81
    ';'           shift, and go to state 151


State 139

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   61 command: decl_id ASSIGN . expr ';'
   67 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 152
    func_call  go to state 59


State 140

   59 body: body command .

    $default  reduce using rule 59 (body)


State 141

   54 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return . '}' ';'

    '}'  shift, and go to state 153


State 142

   65 local_decl: local_decl var_decl .

    $default  reduce using rule 65 (local_decl)


State 143

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body . return '}' ';'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   72 return: . KW_RETURN expr ';'
   73       | . KW_RETURN ';'
   74       | . %empty  ['}']
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 121
    KW_WHILE   shift, and go to state 122
    KW_RETURN  shift, and go to state 123
    IDENT      shift, and go to state 51
    '['        shift, and go to state 9

    $default  reduce using rule 74 (return)

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    return         go to state 154
    if_command     go to state 131
    while_command  go to state 132


State 144

   52 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return . '}' ';'

    '}'  shift, and go to state 155


State 145

   62 command: func_call ';' .

    $default  reduce using rule 62 (command)


State 146

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' . ';'

    ';'  shift, and go to state 156


State 147

    2 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return . '}'

    '}'  shift, and go to state 157


State 148

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body . return '}'
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   72 return: . KW_RETURN expr ';'
   73       | . KW_RETURN ';'
   74       | . %empty  ['}']
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 121
    KW_WHILE   shift, and go to state 122
    KW_RETURN  shift, and go to state 123
    IDENT      shift, and go to state 51
    '['        shift, and go to state 9

    $default  reduce using rule 74 (return)

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    return         go to state 158
    if_command     go to state 131
    while_command  go to state 132


State 149

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   75           | KW_IF expr KW_THEN . body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_WHILE  shift, and go to state 122
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    body           go to state 159
    command        go to state 127
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 150

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   79              | KW_WHILE expr KW_LOOP . body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_WHILE  shift, and go to state 122
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    body           go to state 160
    command        go to state 127
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 151

   72 return: KW_RETURN expr ';' .

    $default  reduce using rule 72 (return)


State 152

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr
   61 command: decl_id ASSIGN expr . ';'

    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81
    ';'           shift, and go to state 161


State 153

   54 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' . ';'

    ';'  shift, and go to state 162


State 154

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return . '}' ';'

    '}'  shift, and go to state 163


State 155

   52 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' . ';'

    ';'  shift, and go to state 164


State 156

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';' .

    $default  reduce using rule 53 (func_decl)


State 157

    2 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}' .

    $default  reduce using rule 2 (program)


State 158

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return . '}'

    '}'  shift, and go to state 165


State 159

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   75           | KW_IF expr KW_THEN body . if_rest
   76 if_rest: . KW_ELSE body KW_FI ';'
   77        | . KW_ELSE KW_IF expr KW_THEN body if_rest
   78        | . KW_FI ';'
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_ELSE   shift, and go to state 166
    KW_FI     shift, and go to state 167
    KW_WHILE  shift, and go to state 122
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    if_command     go to state 131
    if_rest        go to state 168
    while_command  go to state 132


State 160

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   79              | KW_WHILE expr KW_LOOP body . KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_WHILE  shift, and go to state 122
    KW_POOL   shift, and go to state 169
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 161

   61 command: decl_id ASSIGN expr ';' .

    $default  reduce using rule 61 (command)


State 162

   54 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';' .

    $default  reduce using rule 54 (func_decl)


State 163

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' . ';'

    ';'  shift, and go to state 170


State 164

   52 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';' .

    $default  reduce using rule 52 (func_decl)


State 165

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}' .

    $default  reduce using rule 1 (program)


State 166

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   76 if_rest: KW_ELSE . body KW_FI ';'
   77        | KW_ELSE . KW_IF expr KW_THEN body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 171
    KW_WHILE  shift, and go to state 122
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    body           go to state 172
    command        go to state 127
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 167

   78 if_rest: KW_FI . ';'

    ';'  shift, and go to state 173


State 168

   75 if_command: KW_IF expr KW_THEN body if_rest .

    $default  reduce using rule 75 (if_command)


State 169

   79 while_command: KW_WHILE expr KW_LOOP body KW_POOL . ';'

    ';'  shift, and go to state 174


State 170

   51 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';' .

    $default  reduce using rule 51 (func_decl)


State 171

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   27 expr: . POSINT
   28     | . REAL
   29     | . STRING
   30     | . decl_id
   31     | . func_call
   32     | . '-' expr
   33     | . '+' expr
   34     | . KW_NOT expr
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . '(' expr ')'
   38     | . expr '+' expr
   39     | . expr '-' expr
   40     | . expr '*' expr
   41     | . expr '/' expr
   42     | . expr '%' expr
   43     | . expr TK_OP_BIGGER expr
   44     | . expr TK_OP_BIGEQ expr
   45     | . expr TK_OP_NOTEQ expr
   46     | . expr TK_OP_EQ expr
   47     | . KW_TRUE
   48     | . KW_FALSE
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: KW_IF . expr KW_THEN body if_rest
   77 if_rest: KW_ELSE KW_IF . expr KW_THEN body if_rest

    KW_TRUE   shift, and go to state 47
    KW_FALSE  shift, and go to state 48
    KW_NOT    shift, and go to state 49
    STRING    shift, and go to state 50
    IDENT     shift, and go to state 51
    POSINT    shift, and go to state 52
    REAL      shift, and go to state 53
    '+'       shift, and go to state 54
    '-'       shift, and go to state 55
    '('       shift, and go to state 56
    '['       shift, and go to state 9

    decl_id    go to state 57
    expr       go to state 175
    func_call  go to state 59


State 172

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   76 if_rest: KW_ELSE body . KW_FI ';'
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_FI     shift, and go to state 176
    KW_WHILE  shift, and go to state 122
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 173

   78 if_rest: KW_FI ';' .

    $default  reduce using rule 78 (if_rest)


State 174

   79 while_command: KW_WHILE expr KW_LOOP body KW_POOL ';' .

    $default  reduce using rule 79 (while_command)


State 175

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . TK_OP_BIGGER expr
   44     | expr . TK_OP_BIGEQ expr
   45     | expr . TK_OP_NOTEQ expr
   46     | expr . TK_OP_EQ expr
   75 if_command: KW_IF expr . KW_THEN body if_rest
   77 if_rest: KW_ELSE KW_IF expr . KW_THEN body if_rest

    KW_THEN       shift, and go to state 177
    KW_AND        shift, and go to state 71
    KW_OR         shift, and go to state 72
    TK_OP_EQ      shift, and go to state 73
    TK_OP_BIGGER  shift, and go to state 74
    TK_OP_BIGEQ   shift, and go to state 75
    TK_OP_NOTEQ   shift, and go to state 76
    '+'           shift, and go to state 77
    '-'           shift, and go to state 78
    '*'           shift, and go to state 79
    '/'           shift, and go to state 80
    '%'           shift, and go to state 81


State 176

   76 if_rest: KW_ELSE body KW_FI . ';'

    ';'  shift, and go to state 178


State 177

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: . body command
   60     | . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   75           | KW_IF expr KW_THEN . body if_rest
   77 if_rest: KW_ELSE KW_IF expr KW_THEN . body if_rest
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_WHILE  shift, and go to state 122
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    body           go to state 179
    command        go to state 127
    func_call      go to state 129
    if_command     go to state 131
    while_command  go to state 132


State 178

   76 if_rest: KW_ELSE body KW_FI ';' .

    $default  reduce using rule 76 (if_rest)


State 179

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   59 body: body . command
   61 command: . decl_id ASSIGN expr ';'
   62        | . func_call ';'
   63        | . if_command
   64        | . while_command
   67 func_call: . IDENT '(' param_list ')'
   75 if_command: . KW_IF expr KW_THEN body if_rest
   75           | KW_IF expr KW_THEN body . if_rest
   76 if_rest: . KW_ELSE body KW_FI ';'
   77        | . KW_ELSE KW_IF expr KW_THEN body if_rest
   77        | KW_ELSE KW_IF expr KW_THEN body . if_rest
   78        | . KW_FI ';'
   79 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 121
    KW_ELSE   shift, and go to state 166
    KW_FI     shift, and go to state 167
    KW_WHILE  shift, and go to state 122
    IDENT     shift, and go to state 51
    '['       shift, and go to state 9

    decl_id        go to state 125
    command        go to state 140
    func_call      go to state 129
    if_command     go to state 131
    if_rest        go to state 180
    while_command  go to state 132


State 180

   75 if_command: KW_IF expr KW_THEN body if_rest .  [KW_IF, KW_FI, KW_WHILE, IDENT, '[']
   77 if_rest: KW_ELSE KW_IF expr KW_THEN body if_rest .  [KW_IF, KW_ELSE, KW_FI, KW_WHILE, KW_POOL, KW_RETURN, IDENT, '}', '[']

    KW_IF      reduce using rule 75 (if_command)
    KW_IF      [reduce using rule 77 (if_rest)]
    KW_ELSE    reduce using rule 77 (if_rest)
    KW_FI      reduce using rule 75 (if_command)
    KW_FI      [reduce using rule 77 (if_rest)]
    KW_WHILE   reduce using rule 75 (if_command)
    KW_WHILE   [reduce using rule 77 (if_rest)]
    KW_POOL    reduce using rule 77 (if_rest)
    KW_RETURN  reduce using rule 77 (if_rest)
    IDENT      reduce using rule 75 (if_command)
    IDENT      [reduce using rule 77 (if_rest)]
    '}'        reduce using rule 77 (if_rest)
    '['        reduce using rule 75 (if_command)
    '['        [reduce using rule 77 (if_rest)]
    $default   reduce using rule 75 (if_command)
