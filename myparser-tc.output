Grammar

    0 $accept: program $end

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    2        | func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    3        | global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    4        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    5        | KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    7        | global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    9 decl_types: var_decl
   10           | const_decl

   11 global_decl: global_decl decl_types
   12            | decl_types

   13 var_decl: KW_LET let_decl_body

   14 let_decl_body: let_decl_list ':' type_spec ';'

   15 let_decl_list: let_decl_list ',' let_decl_init
   16              | let_decl_init

   17 let_decl_init: decl_id
   18              | decl_id ASSIGN expr

   19 const_decl: KW_CONST const_decl_body

   20 const_decl_body: const_decl_list ':' type_spec ';'

   21 const_decl_list: const_decl_list ',' const_decl_init
   22                | const_decl_init

   23 const_decl_init: decl_id ASSIGN POSINT
   24                | decl_id ASSIGN REAL
   25                | decl_id ASSIGN STRING

   26 decl_id: IDENT
   27        | '[' ']' IDENT
   28        | IDENT '[' POSINT ']'
   29        | IDENT '[' decl_id ']'

   30 type_spec: KW_INT
   31          | KW_REAL
   32          | KW_BOOL
   33          | KW_STRING

   34 expr: POSINT
   35     | REAL
   36     | STRING
   37     | decl_id
   38     | func_call
   39     | '-' expr
   40     | '+' expr
   41     | KW_NOT expr
   42     | expr KW_OR expr
   43     | expr KW_AND expr
   44     | '(' expr ')'
   45     | '[' expr ']'
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | expr '%' expr
   51     | expr TK_OP_BIGGER expr
   52     | expr TK_OP_BIGEQ expr
   53     | expr TK_OP_NOTEQ expr
   54     | expr TK_OP_EQ expr
   55     | KW_TRUE
   56     | KW_FALSE

   57 func_decl_list: func_decl_list func_decl
   58               | func_decl

   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

   63 par_decl_list: par_decl_list ',' par_decl
   64              | par_decl

   65 par_decl: decl_id ':' type_spec
   66         | %empty

   67 body: body command
   68     | command

   69 command: decl_id ASSIGN expr ';'
   70        | func_call ';'
   71        | if_command
   72        | while_command
   73        | return

   74 local_decl: local_decl var_decl
   75           | var_decl

   76 func_call: IDENT '(' param_list ')'

   77 param_list: param_list ',' param
   78           | param

   79 param: expr
   80      | %empty

   81 return: KW_RETURN expr ';'
   82       | KW_RETURN ';'

   83 if_command: KW_IF expr KW_THEN body if_rest

   84 if_rest: KW_ELSE body KW_FI ';'
   85        | KW_FI ';'

   86 while_command: KW_WHILE expr KW_LOOP body KW_POOL ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 50
'(' (40) 1 2 3 4 5 6 7 8 44 59 60 61 62 76
')' (41) 1 2 3 4 5 6 7 8 44 59 60 61 62 76
'*' (42) 48
'+' (43) 40 46
',' (44) 15 21 63 77
'-' (45) 39 47
'/' (47) 49
':' (58) 1 2 3 4 5 6 7 8 14 20 59 60 61 62 65
';' (59) 14 20 59 60 61 62 69 70 81 82 84 85 86
'[' (91) 27 28 29 45
']' (93) 27 28 29 45
'{' (123) 1 2 3 4 5 6 7 8 59 60 61 62
'}' (125) 1 2 3 4 5 6 7 8 59 60 61 62
error (256)
KW_INT (258) 1 2 3 4 5 6 7 8 30
KW_REAL (259) 31
KW_STRING (260) 33
KW_TRUE (261) 55
KW_FALSE (262) 56
KW_BOOL (263) 32
KW_IF (264) 83
KW_THEN (265) 83
KW_ELSE (266) 84
KW_FI (267) 84 85
KW_WHILE (268) 86
KW_LOOP (269) 86
KW_POOL (270) 86
KW_CONST (271) 1 2 3 4 5 6 7 8 19 59 60 61 62
KW_LET (272) 13
KW_RETURN (273) 81 82
KW_NOT (274) 41
KW_AND (275) 43
KW_OR (276) 42
KW_START (277) 1 2 3 4 5 6 7 8
STRING (278) 25 36
IDENT (279) 26 27 28 29 76
POSINT (280) 23 28 34
REAL (281) 24 35
ASSIGN (282) 1 2 3 4 5 6 7 8 18 23 24 25 59 60 61 62 69
TK_OP_EQ (283) 54
TK_OP_BIGGER (284) 51
TK_OP_BIGEQ (285) 52
TK_OP_NOTEQ (286) 53
ARROW (287) 1 2 3 4 5 6 7 8 59 60 61 62


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2 3 4 5 6 7 8, on right: 0
decl_types (49)
    on left: 9 10, on right: 11 12
global_decl (50)
    on left: 11 12, on right: 3 4 7 8 11
var_decl (51)
    on left: 13, on right: 9 74 75
let_decl_body (52)
    on left: 14, on right: 13
let_decl_list (53)
    on left: 15 16, on right: 14 15
let_decl_init (54)
    on left: 17 18, on right: 15 16
const_decl (55)
    on left: 19, on right: 10
const_decl_body (56)
    on left: 20, on right: 19
const_decl_list (57)
    on left: 21 22, on right: 20 21
const_decl_init (58)
    on left: 23 24 25, on right: 21 22
decl_id (59)
    on left: 26 27 28 29, on right: 17 18 23 24 25 29 37 59 60 61 62
    65 69
type_spec (60)
    on left: 30 31 32 33, on right: 14 20 59 60 61 62 65
expr (61)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
    52 53 54 55 56, on right: 18 39 40 41 42 43 44 45 46 47 48 49 50
    51 52 53 54 69 79 81 83 86
func_decl_list (62)
    on left: 57 58, on right: 2 4 6 8 57
func_decl (63)
    on left: 59 60 61 62, on right: 57 58
par_decl_list (64)
    on left: 63 64, on right: 59 60 61 62 63
par_decl (65)
    on left: 65 66, on right: 63 64
body (66)
    on left: 67 68, on right: 1 2 3 4 5 6 7 8 59 62 67 83 84 86
command (67)
    on left: 69 70 71 72 73, on right: 67 68
local_decl (68)
    on left: 74 75, on right: 1 2 3 4 59 60 74
func_call (69)
    on left: 76, on right: 38 70
param_list (70)
    on left: 77 78, on right: 76 77
param (71)
    on left: 79 80, on right: 77 78
return (72)
    on left: 81 82, on right: 73
if_command (73)
    on left: 83, on right: 71
if_rest (74)
    on left: 84 85, on right: 83
while_command (75)
    on left: 86, on right: 72


State 0

    0 $accept: . program $end
    1 program: . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    2        | . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    3        | . global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    4        | . global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    5        | . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    6        | . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    7        | . global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    8        | . global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    9 decl_types: . var_decl
   10           | . const_decl
   11 global_decl: . global_decl decl_types
   12            | . decl_types
   13 var_decl: . KW_LET let_decl_body
   19 const_decl: . KW_CONST const_decl_body
   57 func_decl_list: . func_decl_list func_decl
   58               | . func_decl
   59 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program         go to state 3
    decl_types      go to state 4
    global_decl     go to state 5
    var_decl        go to state 6
    const_decl      go to state 7
    func_decl_list  go to state 8
    func_decl       go to state 9


State 1

    1 program: KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    5        | KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   19 const_decl: KW_CONST . const_decl_body
   20 const_decl_body: . const_decl_list ':' type_spec ';'
   21 const_decl_list: . const_decl_list ',' const_decl_init
   22                | . const_decl_init
   23 const_decl_init: . decl_id ASSIGN POSINT
   24                | . decl_id ASSIGN REAL
   25                | . decl_id ASSIGN STRING
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_START  shift, and go to state 10
    IDENT     shift, and go to state 11
    '['       shift, and go to state 12

    const_decl_body  go to state 13
    const_decl_list  go to state 14
    const_decl_init  go to state 15
    decl_id          go to state 16


State 2

   13 var_decl: KW_LET . let_decl_body
   14 let_decl_body: . let_decl_list ':' type_spec ';'
   15 let_decl_list: . let_decl_list ',' let_decl_init
   16              | . let_decl_init
   17 let_decl_init: . decl_id
   18              | . decl_id ASSIGN expr
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'

    IDENT  shift, and go to state 11
    '['    shift, and go to state 12

    let_decl_body  go to state 17
    let_decl_list  go to state 18
    let_decl_init  go to state 19
    decl_id        go to state 20


State 3

    0 $accept: program . $end

    $end  shift, and go to state 21


State 4

   12 global_decl: decl_types .

    $default  reduce using rule 12 (global_decl)


State 5

    3 program: global_decl . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    4        | global_decl . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    7        | global_decl . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    8        | global_decl . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
    9 decl_types: . var_decl
   10           | . const_decl
   11 global_decl: global_decl . decl_types
   13 var_decl: . KW_LET let_decl_body
   19 const_decl: . KW_CONST const_decl_body
   57 func_decl_list: . func_decl_list func_decl
   58               | . func_decl
   59 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_CONST  shift, and go to state 22
    KW_LET    shift, and go to state 2

    decl_types      go to state 23
    var_decl        go to state 6
    const_decl      go to state 7
    func_decl_list  go to state 24
    func_decl       go to state 9


State 6

    9 decl_types: var_decl .

    $default  reduce using rule 9 (decl_types)


State 7

   10 decl_types: const_decl .

    $default  reduce using rule 10 (decl_types)


State 8

    2 program: func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    6        | func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   57 func_decl_list: func_decl_list . func_decl
   59 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_CONST  shift, and go to state 25

    func_decl  go to state 26


State 9

   58 func_decl_list: func_decl .

    $default  reduce using rule 58 (func_decl_list)


State 10

    1 program: KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    5        | KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    ASSIGN  shift, and go to state 27


State 11

   26 decl_id: IDENT .  [ASSIGN, ':', ',', ']']
   28        | IDENT . '[' POSINT ']'
   29        | IDENT . '[' decl_id ']'

    '['  shift, and go to state 28

    $default  reduce using rule 26 (decl_id)


State 12

   27 decl_id: '[' . ']' IDENT

    ']'  shift, and go to state 29


State 13

   19 const_decl: KW_CONST const_decl_body .

    $default  reduce using rule 19 (const_decl)


State 14

   20 const_decl_body: const_decl_list . ':' type_spec ';'
   21 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 30
    ','  shift, and go to state 31


State 15

   22 const_decl_list: const_decl_init .

    $default  reduce using rule 22 (const_decl_list)


State 16

   23 const_decl_init: decl_id . ASSIGN POSINT
   24                | decl_id . ASSIGN REAL
   25                | decl_id . ASSIGN STRING
   59 func_decl: KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    ASSIGN  shift, and go to state 32


State 17

   13 var_decl: KW_LET let_decl_body .

    $default  reduce using rule 13 (var_decl)


State 18

   14 let_decl_body: let_decl_list . ':' type_spec ';'
   15 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 33
    ','  shift, and go to state 34


State 19

   16 let_decl_list: let_decl_init .

    $default  reduce using rule 16 (let_decl_list)


State 20

   17 let_decl_init: decl_id .  [':', ',']
   18              | decl_id . ASSIGN expr

    ASSIGN  shift, and go to state 35

    $default  reduce using rule 17 (let_decl_init)


State 21

    0 $accept: program $end .

    $default  accept


State 22

    3 program: global_decl KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    7        | global_decl KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   19 const_decl: KW_CONST . const_decl_body
   20 const_decl_body: . const_decl_list ':' type_spec ';'
   21 const_decl_list: . const_decl_list ',' const_decl_init
   22                | . const_decl_init
   23 const_decl_init: . decl_id ASSIGN POSINT
   24                | . decl_id ASSIGN REAL
   25                | . decl_id ASSIGN STRING
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_START  shift, and go to state 36
    IDENT     shift, and go to state 11
    '['       shift, and go to state 12

    const_decl_body  go to state 13
    const_decl_list  go to state 14
    const_decl_init  go to state 15
    decl_id          go to state 16


State 23

   11 global_decl: global_decl decl_types .

    $default  reduce using rule 11 (global_decl)


State 24

    4 program: global_decl func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   57 func_decl_list: func_decl_list . func_decl
   59 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_CONST  shift, and go to state 37

    func_decl  go to state 26


State 25

    2 program: func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    6        | func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_START  shift, and go to state 38
    IDENT     shift, and go to state 11
    '['       shift, and go to state 12

    decl_id  go to state 39


State 26

   57 func_decl_list: func_decl_list func_decl .

    $default  reduce using rule 57 (func_decl_list)


State 27

    1 program: KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    5        | KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body '}'

    '('  shift, and go to state 40


State 28

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   28        | IDENT '[' . POSINT ']'
   29        | . IDENT '[' decl_id ']'
   29        | IDENT '[' . decl_id ']'

    IDENT   shift, and go to state 11
    POSINT  shift, and go to state 41
    '['     shift, and go to state 12

    decl_id  go to state 42


State 29

   27 decl_id: '[' ']' . IDENT

    IDENT  shift, and go to state 43


State 30

   20 const_decl_body: const_decl_list ':' . type_spec ';'
   30 type_spec: . KW_INT
   31          | . KW_REAL
   32          | . KW_BOOL
   33          | . KW_STRING

    KW_INT     shift, and go to state 44
    KW_REAL    shift, and go to state 45
    KW_STRING  shift, and go to state 46
    KW_BOOL    shift, and go to state 47

    type_spec  go to state 48


State 31

   21 const_decl_list: const_decl_list ',' . const_decl_init
   23 const_decl_init: . decl_id ASSIGN POSINT
   24                | . decl_id ASSIGN REAL
   25                | . decl_id ASSIGN STRING
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'

    IDENT  shift, and go to state 11
    '['    shift, and go to state 12

    const_decl_init  go to state 49
    decl_id          go to state 50


State 32

   23 const_decl_init: decl_id ASSIGN . POSINT
   24                | decl_id ASSIGN . REAL
   25                | decl_id ASSIGN . STRING
   59 func_decl: KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    STRING  shift, and go to state 51
    POSINT  shift, and go to state 52
    REAL    shift, and go to state 53
    '('     shift, and go to state 54


State 33

   14 let_decl_body: let_decl_list ':' . type_spec ';'
   30 type_spec: . KW_INT
   31          | . KW_REAL
   32          | . KW_BOOL
   33          | . KW_STRING

    KW_INT     shift, and go to state 44
    KW_REAL    shift, and go to state 45
    KW_STRING  shift, and go to state 46
    KW_BOOL    shift, and go to state 47

    type_spec  go to state 55


State 34

   15 let_decl_list: let_decl_list ',' . let_decl_init
   17 let_decl_init: . decl_id
   18              | . decl_id ASSIGN expr
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'

    IDENT  shift, and go to state 11
    '['    shift, and go to state 12

    let_decl_init  go to state 56
    decl_id        go to state 20


State 35

   18 let_decl_init: decl_id ASSIGN . expr
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 69
    func_call  go to state 70


State 36

    3 program: global_decl KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    7        | global_decl KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    ASSIGN  shift, and go to state 71


State 37

    4 program: global_decl func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    KW_START  shift, and go to state 72
    IDENT     shift, and go to state 11
    '['       shift, and go to state 12

    decl_id  go to state 39


State 38

    2 program: func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    6        | func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    ASSIGN  shift, and go to state 73


State 39

   59 func_decl: KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    ASSIGN  shift, and go to state 74


State 40

    1 program: KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' local_decl body '}'
    5        | KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body '}'

    ')'  shift, and go to state 75


State 41

   28 decl_id: IDENT '[' POSINT . ']'

    ']'  shift, and go to state 76


State 42

   29 decl_id: IDENT '[' decl_id . ']'

    ']'  shift, and go to state 77


State 43

   27 decl_id: '[' ']' IDENT .

    $default  reduce using rule 27 (decl_id)


State 44

   30 type_spec: KW_INT .

    $default  reduce using rule 30 (type_spec)


State 45

   31 type_spec: KW_REAL .

    $default  reduce using rule 31 (type_spec)


State 46

   33 type_spec: KW_STRING .

    $default  reduce using rule 33 (type_spec)


State 47

   32 type_spec: KW_BOOL .

    $default  reduce using rule 32 (type_spec)


State 48

   20 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 78


State 49

   21 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 21 (const_decl_list)


State 50

   23 const_decl_init: decl_id . ASSIGN POSINT
   24                | decl_id . ASSIGN REAL
   25                | decl_id . ASSIGN STRING

    ASSIGN  shift, and go to state 79


State 51

   25 const_decl_init: decl_id ASSIGN STRING .

    $default  reduce using rule 25 (const_decl_init)


State 52

   23 const_decl_init: decl_id ASSIGN POSINT .

    $default  reduce using rule 23 (const_decl_init)


State 53

   24 const_decl_init: decl_id ASSIGN REAL .

    $default  reduce using rule 24 (const_decl_init)


State 54

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'
   63 par_decl_list: . par_decl_list ',' par_decl
   64              | . par_decl
   65 par_decl: . decl_id ':' type_spec
   66         | . %empty  [')', ',']

    IDENT  shift, and go to state 11
    '['    shift, and go to state 12

    $default  reduce using rule 66 (par_decl)

    decl_id        go to state 80
    par_decl_list  go to state 81
    par_decl       go to state 82


State 55

   14 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 83


State 56

   15 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 15 (let_decl_list)


State 57

   55 expr: KW_TRUE .

    $default  reduce using rule 55 (expr)


State 58

   56 expr: KW_FALSE .

    $default  reduce using rule 56 (expr)


State 59

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   41     | KW_NOT . expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 84
    func_call  go to state 70


State 60

   36 expr: STRING .

    $default  reduce using rule 36 (expr)


State 61

   26 decl_id: IDENT .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ASSIGN, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   28        | IDENT . '[' POSINT ']'
   29        | IDENT . '[' decl_id ']'
   76 func_call: IDENT . '(' param_list ')'

    '('  shift, and go to state 85
    '['  shift, and go to state 28

    $default  reduce using rule 26 (decl_id)


State 62

   34 expr: POSINT .

    $default  reduce using rule 34 (expr)


State 63

   35 expr: REAL .

    $default  reduce using rule 35 (expr)


State 64

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   40     | '+' . expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 86
    func_call  go to state 70


State 65

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   39     | '-' . expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 87
    func_call  go to state 70


State 66

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   44     | '(' . expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 88
    func_call  go to state 70


State 67

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   27        | '[' . ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   45     | '[' . expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67
    ']'       shift, and go to state 29

    decl_id    go to state 68
    expr       go to state 89
    func_call  go to state 70


State 68

   37 expr: decl_id .

    $default  reduce using rule 37 (expr)


State 69

   18 let_decl_init: decl_id ASSIGN expr .  [':', ',']
   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100

    $default  reduce using rule 18 (let_decl_init)


State 70

   38 expr: func_call .

    $default  reduce using rule 38 (expr)


State 71

    3 program: global_decl KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    7        | global_decl KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body '}'

    '('  shift, and go to state 101


State 72

    4 program: global_decl func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}'

    ASSIGN  shift, and go to state 102


State 73

    2 program: func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body '}'

    '('  shift, and go to state 103


State 74

   59 func_decl: KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';'

    '('  shift, and go to state 54


State 75

    1 program: KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' local_decl body '}'
    5        | KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body '}'

    ':'  shift, and go to state 104


State 76

   28 decl_id: IDENT '[' POSINT ']' .

    $default  reduce using rule 28 (decl_id)


State 77

   29 decl_id: IDENT '[' decl_id ']' .

    $default  reduce using rule 29 (decl_id)


State 78

   20 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 20 (const_decl_body)


State 79

   23 const_decl_init: decl_id ASSIGN . POSINT
   24                | decl_id ASSIGN . REAL
   25                | decl_id ASSIGN . STRING

    STRING  shift, and go to state 51
    POSINT  shift, and go to state 52
    REAL    shift, and go to state 53


State 80

   65 par_decl: decl_id . ':' type_spec

    ':'  shift, and go to state 105


State 81

   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' body '}' ';'
   63 par_decl_list: par_decl_list . ',' par_decl

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


State 82

   64 par_decl_list: par_decl .

    $default  reduce using rule 64 (par_decl_list)


State 83

   14 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 14 (let_decl_body)


State 84

   41 expr: KW_NOT expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   42     | expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 41 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < KW_NOT).
    Conflict between rule 41 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < KW_NOT).
    Conflict between rule 41 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < KW_NOT).
    Conflict between rule 41 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < KW_NOT).
    Conflict between rule 41 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 41 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 41 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 41 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 41 and token '%' resolved as reduce ('%' < KW_NOT).


State 85

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'
   76          | IDENT '(' . param_list ')'
   77 param_list: . param_list ',' param
   78           | . param
   79 param: . expr
   80      | . %empty  [')', ',']

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    $default  reduce using rule 80 (param)

    decl_id     go to state 68
    expr        go to state 108
    func_call   go to state 70
    param_list  go to state 109
    param       go to state 110


State 86

   40 expr: '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   42     | expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 40 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '+').
    Conflict between rule 40 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '+').
    Conflict between rule 40 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '+').
    Conflict between rule 40 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '+').
    Conflict between rule 40 and token '+' resolved as reduce (%left '+').
    Conflict between rule 40 and token '-' resolved as reduce (%left '-').
    Conflict between rule 40 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 40 and token '%' resolved as shift ('+' < '%').


State 87

   39 expr: '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   42     | expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 39 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '-').
    Conflict between rule 39 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '-').
    Conflict between rule 39 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '-').
    Conflict between rule 39 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '-').
    Conflict between rule 39 and token '+' resolved as reduce (%left '+').
    Conflict between rule 39 and token '-' resolved as reduce (%left '-').
    Conflict between rule 39 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 39 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 39 and token '%' resolved as shift ('-' < '%').


State 88

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   44     | '(' expr . ')'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100
    ')'           shift, and go to state 111


State 89

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   45     | '[' expr . ']'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100
    ']'           shift, and go to state 112


State 90

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   43     | expr KW_AND . expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 113
    func_call  go to state 70


State 91

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   42     | expr KW_OR . expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 114
    func_call  go to state 70


State 92

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   54     | expr TK_OP_EQ . expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 115
    func_call  go to state 70


State 93

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   51     | expr TK_OP_BIGGER . expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 116
    func_call  go to state 70


State 94

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   52     | expr TK_OP_BIGEQ . expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 117
    func_call  go to state 70


State 95

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   53     | expr TK_OP_NOTEQ . expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 118
    func_call  go to state 70


State 96

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   46     | expr '+' . expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 119
    func_call  go to state 70


State 97

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   47     | expr '-' . expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 120
    func_call  go to state 70


State 98

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   48     | expr '*' . expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 121
    func_call  go to state 70


State 99

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   49     | expr '/' . expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 122
    func_call  go to state 70


State 100

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   50     | expr '%' . expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 123
    func_call  go to state 70


State 101

    3 program: global_decl KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' local_decl body '}'
    7        | global_decl KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body '}'

    ')'  shift, and go to state 124


State 102

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body '}'

    '('  shift, and go to state 125


State 103

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' local_decl body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body '}'

    ')'  shift, and go to state 126


State 104

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' local_decl body '}'
    5        | KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body '}'

    KW_INT  shift, and go to state 127


State 105

   30 type_spec: . KW_INT
   31          | . KW_REAL
   32          | . KW_BOOL
   33          | . KW_STRING
   65 par_decl: decl_id ':' . type_spec

    KW_INT     shift, and go to state 44
    KW_REAL    shift, and go to state 45
    KW_STRING  shift, and go to state 46
    KW_BOOL    shift, and go to state 47

    type_spec  go to state 128


State 106

   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' body '}' ';'

    ':'  shift, and go to state 129


State 107

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   63 par_decl_list: par_decl_list ',' . par_decl
   65 par_decl: . decl_id ':' type_spec
   66         | . %empty  [')', ',']

    IDENT  shift, and go to state 11
    '['    shift, and go to state 12

    $default  reduce using rule 66 (par_decl)

    decl_id   go to state 80
    par_decl  go to state 130


State 108

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr
   79 param: expr .  [')', ',']

    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100

    $default  reduce using rule 79 (param)


State 109

   76 func_call: IDENT '(' param_list . ')'
   77 param_list: param_list . ',' param

    ')'  shift, and go to state 131
    ','  shift, and go to state 132


State 110

   78 param_list: param .

    $default  reduce using rule 78 (param_list)


State 111

   44 expr: '(' expr ')' .

    $default  reduce using rule 44 (expr)


State 112

   45 expr: '[' expr ']' .

    $default  reduce using rule 45 (expr)


State 113

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   43     | expr KW_AND expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ')', ':', ';', ',', ']']
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 43 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 43 and token TK_OP_EQ resolved as shift (KW_AND < TK_OP_EQ).
    Conflict between rule 43 and token TK_OP_BIGGER resolved as shift (KW_AND < TK_OP_BIGGER).
    Conflict between rule 43 and token TK_OP_BIGEQ resolved as shift (KW_AND < TK_OP_BIGEQ).
    Conflict between rule 43 and token TK_OP_NOTEQ resolved as shift (KW_AND < TK_OP_NOTEQ).
    Conflict between rule 43 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 43 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 43 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 43 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 43 and token '%' resolved as shift (KW_AND < '%').


State 114

   42 expr: expr . KW_OR expr
   42     | expr KW_OR expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ')', ':', ';', ',', ']']
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 42 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 42 and token TK_OP_EQ resolved as shift (KW_OR < TK_OP_EQ).
    Conflict between rule 42 and token TK_OP_BIGGER resolved as shift (KW_OR < TK_OP_BIGGER).
    Conflict between rule 42 and token TK_OP_BIGEQ resolved as shift (KW_OR < TK_OP_BIGEQ).
    Conflict between rule 42 and token TK_OP_NOTEQ resolved as shift (KW_OR < TK_OP_NOTEQ).
    Conflict between rule 42 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 42 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 42 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 42 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 42 and token '%' resolved as shift (KW_OR < '%').


State 115

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr
   54     | expr TK_OP_EQ expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token KW_AND resolved as reduce (KW_AND < TK_OP_EQ).
    Conflict between rule 54 and token KW_OR resolved as reduce (KW_OR < TK_OP_EQ).
    Conflict between rule 54 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 54 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 54 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 54 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 54 and token '+' resolved as shift (TK_OP_EQ < '+').
    Conflict between rule 54 and token '-' resolved as shift (TK_OP_EQ < '-').
    Conflict between rule 54 and token '*' resolved as shift (TK_OP_EQ < '*').
    Conflict between rule 54 and token '/' resolved as shift (TK_OP_EQ < '/').
    Conflict between rule 54 and token '%' resolved as shift (TK_OP_EQ < '%').


State 116

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   51     | expr TK_OP_BIGGER expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < TK_OP_BIGGER).
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < TK_OP_BIGGER).
    Conflict between rule 51 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 51 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 51 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 51 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 51 and token '+' resolved as shift (TK_OP_BIGGER < '+').
    Conflict between rule 51 and token '-' resolved as shift (TK_OP_BIGGER < '-').
    Conflict between rule 51 and token '*' resolved as shift (TK_OP_BIGGER < '*').
    Conflict between rule 51 and token '/' resolved as shift (TK_OP_BIGGER < '/').
    Conflict between rule 51 and token '%' resolved as shift (TK_OP_BIGGER < '%').


State 117

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   52     | expr TK_OP_BIGEQ expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token KW_AND resolved as reduce (KW_AND < TK_OP_BIGEQ).
    Conflict between rule 52 and token KW_OR resolved as reduce (KW_OR < TK_OP_BIGEQ).
    Conflict between rule 52 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 52 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 52 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 52 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 52 and token '+' resolved as shift (TK_OP_BIGEQ < '+').
    Conflict between rule 52 and token '-' resolved as shift (TK_OP_BIGEQ < '-').
    Conflict between rule 52 and token '*' resolved as shift (TK_OP_BIGEQ < '*').
    Conflict between rule 52 and token '/' resolved as shift (TK_OP_BIGEQ < '/').
    Conflict between rule 52 and token '%' resolved as shift (TK_OP_BIGEQ < '%').


State 118

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   53     | expr TK_OP_NOTEQ expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']
   54     | expr . TK_OP_EQ expr

    '+'  shift, and go to state 96
    '-'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token KW_AND resolved as reduce (KW_AND < TK_OP_NOTEQ).
    Conflict between rule 53 and token KW_OR resolved as reduce (KW_OR < TK_OP_NOTEQ).
    Conflict between rule 53 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 53 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 53 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 53 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 53 and token '+' resolved as shift (TK_OP_NOTEQ < '+').
    Conflict between rule 53 and token '-' resolved as shift (TK_OP_NOTEQ < '-').
    Conflict between rule 53 and token '*' resolved as shift (TK_OP_NOTEQ < '*').
    Conflict between rule 53 and token '/' resolved as shift (TK_OP_NOTEQ < '/').
    Conflict between rule 53 and token '%' resolved as shift (TK_OP_NOTEQ < '%').


State 119

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   46     | expr '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 46 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '+').
    Conflict between rule 46 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '+').
    Conflict between rule 46 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '+').
    Conflict between rule 46 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '+').
    Conflict between rule 46 and token '+' resolved as reduce (%left '+').
    Conflict between rule 46 and token '-' resolved as reduce (%left '-').
    Conflict between rule 46 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 46 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 46 and token '%' resolved as shift ('+' < '%').


State 120

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   47     | expr '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '%'  shift, and go to state 100

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 47 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '-').
    Conflict between rule 47 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '-').
    Conflict between rule 47 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '-').
    Conflict between rule 47 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '-').
    Conflict between rule 47 and token '+' resolved as reduce (%left '+').
    Conflict between rule 47 and token '-' resolved as reduce (%left '-').
    Conflict between rule 47 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 47 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 47 and token '%' resolved as shift ('-' < '%').


State 121

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   48     | expr '*' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 48 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '*').
    Conflict between rule 48 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '*').
    Conflict between rule 48 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '*').
    Conflict between rule 48 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '*').
    Conflict between rule 48 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 48 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 48 and token '*' resolved as reduce (%left '*').
    Conflict between rule 48 and token '/' resolved as reduce (%left '/').
    Conflict between rule 48 and token '%' resolved as reduce (%left '%').


State 122

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   49     | expr '/' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 49 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '/').
    Conflict between rule 49 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '/').
    Conflict between rule 49 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '/').
    Conflict between rule 49 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '/').
    Conflict between rule 49 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 49 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 49 and token '*' resolved as reduce (%left '*').
    Conflict between rule 49 and token '/' resolved as reduce (%left '/').
    Conflict between rule 49 and token '%' resolved as reduce (%left '%').


State 123

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   50     | expr '%' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 50 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 50 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '%').
    Conflict between rule 50 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '%').
    Conflict between rule 50 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '%').
    Conflict between rule 50 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '%').
    Conflict between rule 50 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 50 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 50 and token '*' resolved as reduce (%left '*').
    Conflict between rule 50 and token '/' resolved as reduce (%left '/').
    Conflict between rule 50 and token '%' resolved as reduce (%left '%').


State 124

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' local_decl body '}'
    7        | global_decl KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body '}'

    ':'  shift, and go to state 133


State 125

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body '}'

    ')'  shift, and go to state 134


State 126

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' local_decl body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body '}'

    ':'  shift, and go to state 135


State 127

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' local_decl body '}'
    5        | KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body '}'

    ARROW  shift, and go to state 136


State 128

   65 par_decl: decl_id ':' type_spec .

    $default  reduce using rule 65 (par_decl)


State 129

   30 type_spec: . KW_INT
   31          | . KW_REAL
   32          | . KW_BOOL
   33          | . KW_STRING
   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' body '}' ';'

    KW_INT     shift, and go to state 44
    KW_REAL    shift, and go to state 45
    KW_STRING  shift, and go to state 46
    KW_BOOL    shift, and go to state 47

    type_spec  go to state 137


State 130

   63 par_decl_list: par_decl_list ',' par_decl .

    $default  reduce using rule 63 (par_decl_list)


State 131

   76 func_call: IDENT '(' param_list ')' .

    $default  reduce using rule 76 (func_call)


State 132

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'
   77 param_list: param_list ',' . param
   79 param: . expr
   80      | . %empty  [')', ',']

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    $default  reduce using rule 80 (param)

    decl_id    go to state 68
    expr       go to state 108
    func_call  go to state 70
    param      go to state 138


State 133

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' local_decl body '}'
    7        | global_decl KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body '}'

    KW_INT  shift, and go to state 139


State 134

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body '}'

    ':'  shift, and go to state 140


State 135

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' local_decl body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body '}'

    KW_INT  shift, and go to state 141


State 136

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' local_decl body '}'
    5        | KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body '}'

    '{'  shift, and go to state 142


State 137

   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' body '}' ';'

    ARROW  shift, and go to state 143


State 138

   77 param_list: param_list ',' param .

    $default  reduce using rule 77 (param_list)


State 139

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' local_decl body '}'
    7        | global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body '}'

    ARROW  shift, and go to state 144


State 140

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body '}'

    KW_INT  shift, and go to state 145


State 141

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' local_decl body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body '}'

    ARROW  shift, and go to state 146


State 142

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . local_decl body '}'
    5        | KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: . local_decl var_decl
   75           | . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 150
    decl_id        go to state 151
    body           go to state 152
    command        go to state 153
    local_decl     go to state 154
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 143

   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' body '}' ';'

    '{'  shift, and go to state 159


State 144

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' local_decl body '}'
    7        | global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body '}'

    '{'  shift, and go to state 160


State 145

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body '}'

    ARROW  shift, and go to state 161


State 146

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' local_decl body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body '}'

    '{'  shift, and go to state 162


State 147

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'
   83 if_command: KW_IF . expr KW_THEN body if_rest

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 163
    func_call  go to state 70


State 148

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'
   86 while_command: KW_WHILE . expr KW_LOOP body KW_POOL ';'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 164
    func_call  go to state 70


State 149

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   76 func_call: . IDENT '(' param_list ')'
   81 return: KW_RETURN . expr ';'
   82       | KW_RETURN . ';'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    ';'       shift, and go to state 165
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 166
    func_call  go to state 70


State 150

   75 local_decl: var_decl .

    $default  reduce using rule 75 (local_decl)


State 151

   69 command: decl_id . ASSIGN expr ';'

    ASSIGN  shift, and go to state 167


State 152

    5 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 168
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 153

   68 body: command .

    $default  reduce using rule 68 (body)


State 154

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: local_decl . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 170
    decl_id        go to state 151
    body           go to state 171
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 155

   70 command: func_call . ';'

    ';'  shift, and go to state 172


State 156

   73 command: return .

    $default  reduce using rule 73 (command)


State 157

   71 command: if_command .

    $default  reduce using rule 71 (command)


State 158

   72 command: while_command .

    $default  reduce using rule 72 (command)


State 159

   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . local_decl body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . local_decl '}' ';'
   61          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . '}' ';'
   62          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . body '}' ';'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: . local_decl var_decl
   75           | . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 173
    '['        shift, and go to state 12

    var_decl       go to state 150
    decl_id        go to state 151
    body           go to state 174
    command        go to state 153
    local_decl     go to state 175
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 160

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . local_decl body '}'
    7        | global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: . local_decl var_decl
   75           | . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 150
    decl_id        go to state 151
    body           go to state 176
    command        go to state 153
    local_decl     go to state 177
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 161

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body '}'

    '{'  shift, and go to state 178


State 162

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . local_decl body '}'
    6        | func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: . local_decl var_decl
   75           | . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 150
    decl_id        go to state 151
    body           go to state 179
    command        go to state 153
    local_decl     go to state 180
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 163

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr
   83 if_command: KW_IF expr . KW_THEN body if_rest

    KW_THEN       shift, and go to state 181
    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100


State 164

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr
   86 while_command: KW_WHILE expr . KW_LOOP body KW_POOL ';'

    KW_LOOP       shift, and go to state 182
    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100


State 165

   82 return: KW_RETURN ';' .

    $default  reduce using rule 82 (return)


State 166

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr
   81 return: KW_RETURN expr . ';'

    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100
    ';'           shift, and go to state 183


State 167

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   34 expr: . POSINT
   35     | . REAL
   36     | . STRING
   37     | . decl_id
   38     | . func_call
   39     | . '-' expr
   40     | . '+' expr
   41     | . KW_NOT expr
   42     | . expr KW_OR expr
   43     | . expr KW_AND expr
   44     | . '(' expr ')'
   45     | . '[' expr ']'
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '*' expr
   49     | . expr '/' expr
   50     | . expr '%' expr
   51     | . expr TK_OP_BIGGER expr
   52     | . expr TK_OP_BIGEQ expr
   53     | . expr TK_OP_NOTEQ expr
   54     | . expr TK_OP_EQ expr
   55     | . KW_TRUE
   56     | . KW_FALSE
   69 command: decl_id ASSIGN . expr ';'
   76 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 57
    KW_FALSE  shift, and go to state 58
    KW_NOT    shift, and go to state 59
    STRING    shift, and go to state 60
    IDENT     shift, and go to state 61
    POSINT    shift, and go to state 62
    REAL      shift, and go to state 63
    '+'       shift, and go to state 64
    '-'       shift, and go to state 65
    '('       shift, and go to state 66
    '['       shift, and go to state 67

    decl_id    go to state 68
    expr       go to state 184
    func_call  go to state 70


State 168

    5 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}' .

    $default  reduce using rule 5 (program)


State 169

   67 body: body command .

    $default  reduce using rule 67 (body)


State 170

   74 local_decl: local_decl var_decl .

    $default  reduce using rule 74 (local_decl)


State 171

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 185
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 172

   70 command: func_call ';' .

    $default  reduce using rule 70 (command)


State 173

   61 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' . ';'

    ';'  shift, and go to state 186


State 174

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   62 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body . '}' ';'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 187
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 175

   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl . body '}' ';'
   60          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl . '}' ';'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: local_decl . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 188
    '['        shift, and go to state 12

    var_decl       go to state 170
    decl_id        go to state 151
    body           go to state 189
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 176

    7 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 190
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 177

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: local_decl . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 170
    decl_id        go to state 151
    body           go to state 191
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 178

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . local_decl body '}'
    8        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: . local_decl var_decl
   75           | . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 150
    decl_id        go to state 151
    body           go to state 192
    command        go to state 153
    local_decl     go to state 193
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 179

    6 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 194
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 180

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: local_decl . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 170
    decl_id        go to state 151
    body           go to state 195
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 181

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   83           | KW_IF expr KW_THEN . body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    decl_id        go to state 151
    body           go to state 196
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 182

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   86              | KW_WHILE expr KW_LOOP . body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    decl_id        go to state 151
    body           go to state 197
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 183

   81 return: KW_RETURN expr ';' .

    $default  reduce using rule 81 (return)


State 184

   42 expr: expr . KW_OR expr
   43     | expr . KW_AND expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | expr . TK_OP_BIGGER expr
   52     | expr . TK_OP_BIGEQ expr
   53     | expr . TK_OP_NOTEQ expr
   54     | expr . TK_OP_EQ expr
   69 command: decl_id ASSIGN expr . ';'

    KW_AND        shift, and go to state 90
    KW_OR         shift, and go to state 91
    TK_OP_EQ      shift, and go to state 92
    TK_OP_BIGGER  shift, and go to state 93
    TK_OP_BIGEQ   shift, and go to state 94
    TK_OP_NOTEQ   shift, and go to state 95
    '+'           shift, and go to state 96
    '-'           shift, and go to state 97
    '*'           shift, and go to state 98
    '/'           shift, and go to state 99
    '%'           shift, and go to state 100
    ';'           shift, and go to state 198


State 185

    1 program: KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}' .

    $default  reduce using rule 1 (program)


State 186

   61 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' '}' ';' .

    $default  reduce using rule 61 (func_decl)


State 187

   62 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' . ';'

    ';'  shift, and go to state 199


State 188

   60 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' . ';'

    ';'  shift, and go to state 200


State 189

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body . '}' ';'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 201
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 190

    7 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}' .

    $default  reduce using rule 7 (program)


State 191

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 202
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 192

    8 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 203
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 193

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl . body '}'
   13 var_decl: . KW_LET let_decl_body
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   74 local_decl: local_decl . var_decl
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    var_decl       go to state 170
    decl_id        go to state 151
    body           go to state 204
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 194

    6 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}' .

    $default  reduce using rule 6 (program)


State 195

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 205
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 196

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   83           | KW_IF expr KW_THEN body . if_rest
   84 if_rest: . KW_ELSE body KW_FI ';'
   85        | . KW_FI ';'
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_ELSE    shift, and go to state 206
    KW_FI      shift, and go to state 207
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    if_rest        go to state 208
    while_command  go to state 158


State 197

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   86              | KW_WHILE expr KW_LOOP body . KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_POOL    shift, and go to state 209
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 198

   69 command: decl_id ASSIGN expr ';' .

    $default  reduce using rule 69 (command)


State 199

   62 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body '}' ';' .

    $default  reduce using rule 62 (func_decl)


State 200

   60 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl '}' ';' .

    $default  reduce using rule 60 (func_decl)


State 201

   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' . ';'

    ';'  shift, and go to state 210


State 202

    3 program: global_decl KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}' .

    $default  reduce using rule 3 (program)


State 203

    8 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body '}' .

    $default  reduce using rule 8 (program)


State 204

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body . '}'
   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '}'        shift, and go to state 211
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 205

    2 program: func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}' .

    $default  reduce using rule 2 (program)


State 206

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: . body command
   68     | . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   84 if_rest: KW_ELSE . body KW_FI ';'
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    decl_id        go to state 151
    body           go to state 212
    command        go to state 153
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 207

   85 if_rest: KW_FI . ';'

    ';'  shift, and go to state 213


State 208

   83 if_command: KW_IF expr KW_THEN body if_rest .

    $default  reduce using rule 83 (if_command)


State 209

   86 while_command: KW_WHILE expr KW_LOOP body KW_POOL . ';'

    ';'  shift, and go to state 214


State 210

   59 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body '}' ';' .

    $default  reduce using rule 59 (func_decl)


State 211

    4 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body '}' .

    $default  reduce using rule 4 (program)


State 212

   26 decl_id: . IDENT
   27        | . '[' ']' IDENT
   28        | . IDENT '[' POSINT ']'
   29        | . IDENT '[' decl_id ']'
   67 body: body . command
   69 command: . decl_id ASSIGN expr ';'
   70        | . func_call ';'
   71        | . if_command
   72        | . while_command
   73        | . return
   76 func_call: . IDENT '(' param_list ')'
   81 return: . KW_RETURN expr ';'
   82       | . KW_RETURN ';'
   83 if_command: . KW_IF expr KW_THEN body if_rest
   84 if_rest: KW_ELSE body . KW_FI ';'
   86 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 147
    KW_FI      shift, and go to state 215
    KW_WHILE   shift, and go to state 148
    KW_RETURN  shift, and go to state 149
    IDENT      shift, and go to state 61
    '['        shift, and go to state 12

    decl_id        go to state 151
    command        go to state 169
    func_call      go to state 155
    return         go to state 156
    if_command     go to state 157
    while_command  go to state 158


State 213

   85 if_rest: KW_FI ';' .

    $default  reduce using rule 85 (if_rest)


State 214

   86 while_command: KW_WHILE expr KW_LOOP body KW_POOL ';' .

    $default  reduce using rule 86 (while_command)


State 215

   84 if_rest: KW_ELSE body KW_FI . ';'

    ';'  shift, and go to state 216


State 216

   84 if_rest: KW_ELSE body KW_FI ';' .

    $default  reduce using rule 84 (if_rest)
