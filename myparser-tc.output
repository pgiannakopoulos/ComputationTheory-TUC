Grammar

    0 $accept: program $end

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'

    3 decl_types: var_decl
    4           | const_decl

    5 global_decl: global_decl decl_types
    6            | decl_types

    7 var_decl: KW_LET let_decl_body

    8 let_decl_body: let_decl_list ':' type_spec ';'

    9 let_decl_list: let_decl_list ',' let_decl_init
   10              | let_decl_init

   11 let_decl_init: decl_id
   12              | decl_id ASSIGN expr

   13 const_decl: KW_CONST const_decl_body

   14 const_decl_body: const_decl_list ':' type_spec ';'

   15 const_decl_list: const_decl_list ',' const_decl_init
   16                | const_decl_init

   17 const_decl_init: decl_id ASSIGN POSINT
   18                | decl_id ASSIGN REAL
   19                | decl_id ASSIGN STRING

   20 decl_id: IDENT
   21        | '[' ']' IDENT
   22        | IDENT '[' POSINT ']'
   23        | IDENT '[' decl_id ']'

   24 type_spec: KW_INT
   25          | KW_REAL
   26          | KW_BOOL
   27          | KW_STRING

   28 expr: POSINT
   29     | REAL
   30     | STRING
   31     | decl_id
   32     | func_call
   33     | '-' expr
   34     | '+' expr
   35     | KW_NOT expr
   36     | expr KW_OR expr
   37     | expr KW_AND expr
   38     | '(' expr ')'
   39     | '[' expr ']'
   40     | expr '+' expr
   41     | expr '-' expr
   42     | expr '*' expr
   43     | expr '/' expr
   44     | expr '%' expr
   45     | expr TK_OP_BIGGER expr
   46     | expr TK_OP_BIGEQ expr
   47     | expr TK_OP_NOTEQ expr
   48     | expr TK_OP_EQ expr
   49     | KW_TRUE
   50     | KW_FALSE

   51 func_decl_list: func_decl_list func_decl
   52               | func_decl

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

   57 par_decl_list: par_decl_list ',' par_decl
   58              | par_decl

   59 par_decl: par_decl ':' type_spec
   60         | %empty

   61 body: body command
   62     | command

   63 command: decl_id ASSIGN expr ';'
   64        | func_call ';'
   65        | if_command
   66        | while_command

   67 local_decl: local_decl var_decl
   68           | var_decl

   69 func_call: IDENT '(' param_list ')'

   70 param_list: param_list ',' param
   71           | param

   72 param: expr
   73      | %empty

   74 return: KW_RETURN expr ';'
   75       | KW_RETURN ';'
   76       | %empty

   77 if_command: KW_IF expr KW_THEN body if_rest

   78 if_rest: KW_ELSE body KW_FI ';'
   79        | KW_FI ';'

   80 while_command: KW_WHILE expr KW_LOOP body KW_POOL ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 44
'(' (40) 1 2 38 53 54 55 56 69
')' (41) 1 2 38 53 54 55 56 69
'*' (42) 42
'+' (43) 34 40
',' (44) 9 15 57 70
'-' (45) 33 41
'/' (47) 43
':' (58) 1 2 8 14 53 54 55 56 59
';' (59) 8 14 53 54 55 56 63 64 74 75 78 79 80
'[' (91) 21 22 23 39
']' (93) 21 22 23 39
'{' (123) 1 2 53 54 55 56
'}' (125) 1 2 53 54 55 56
error (256)
KW_INT (258) 1 2 24
KW_REAL (259) 25
KW_STRING (260) 27
KW_TRUE (261) 49
KW_FALSE (262) 50
KW_BOOL (263) 26
KW_IF (264) 77
KW_THEN (265) 77
KW_ELSE (266) 78
KW_FI (267) 78 79
KW_WHILE (268) 80
KW_LOOP (269) 80
KW_POOL (270) 80
KW_CONST (271) 1 2 13 53 54 55 56
KW_LET (272) 7
KW_RETURN (273) 74 75
KW_NOT (274) 35
KW_AND (275) 37
KW_OR (276) 36
KW_START (277) 1 2
STRING (278) 19 30
IDENT (279) 20 21 22 23 69
POSINT (280) 17 22 28
REAL (281) 18 29
ASSIGN (282) 1 2 12 17 18 19 53 54 55 56 63
TK_OP_EQ (283) 48
TK_OP_BIGGER (284) 45
TK_OP_BIGEQ (285) 46
TK_OP_NOTEQ (286) 47
ARROW (287) 1 2 53 54 55 56


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1 2, on right: 0
decl_types (49)
    on left: 3 4, on right: 5 6
global_decl (50)
    on left: 5 6, on right: 1 2 5
var_decl (51)
    on left: 7, on right: 3 67 68
let_decl_body (52)
    on left: 8, on right: 7
let_decl_list (53)
    on left: 9 10, on right: 8 9
let_decl_init (54)
    on left: 11 12, on right: 9 10
const_decl (55)
    on left: 13, on right: 4
const_decl_body (56)
    on left: 14, on right: 13
const_decl_list (57)
    on left: 15 16, on right: 14 15
const_decl_init (58)
    on left: 17 18 19, on right: 15 16
decl_id (59)
    on left: 20 21 22 23, on right: 11 12 17 18 19 23 31 53 54 55 56
    63
type_spec (60)
    on left: 24 25 26 27, on right: 8 14 53 54 55 56 59
expr (61)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 50, on right: 12 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 63 72 74 77 80
func_decl_list (62)
    on left: 51 52, on right: 1 2 51
func_decl (63)
    on left: 53 54 55 56, on right: 51 52
par_decl_list (64)
    on left: 57 58, on right: 53 54 55 56 57
par_decl (65)
    on left: 59 60, on right: 57 58 59
body (66)
    on left: 61 62, on right: 1 2 53 56 61 77 78 80
command (67)
    on left: 63 64 65 66, on right: 61 62
local_decl (68)
    on left: 67 68, on right: 1 53 54 67
func_call (69)
    on left: 69, on right: 32 64
param_list (70)
    on left: 70 71, on right: 69 70
param (71)
    on left: 72 73, on right: 70 71
return (72)
    on left: 74 75 76, on right: 1 2 53 54 55 56
if_command (73)
    on left: 77, on right: 65
if_rest (74)
    on left: 78 79, on right: 77
while_command (75)
    on left: 80, on right: 66


State 0

    0 $accept: . program $end
    1 program: . global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | . global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
    3 decl_types: . var_decl
    4           | . const_decl
    5 global_decl: . global_decl decl_types
    6            | . decl_types
    7 var_decl: . KW_LET let_decl_body
   13 const_decl: . KW_CONST const_decl_body

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program      go to state 3
    decl_types   go to state 4
    global_decl  go to state 5
    var_decl     go to state 6
    const_decl   go to state 7


State 1

   13 const_decl: KW_CONST . const_decl_body
   14 const_decl_body: . const_decl_list ':' type_spec ';'
   15 const_decl_list: . const_decl_list ',' const_decl_init
   16                | . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    const_decl_body  go to state 10
    const_decl_list  go to state 11
    const_decl_init  go to state 12
    decl_id          go to state 13


State 2

    7 var_decl: KW_LET . let_decl_body
    8 let_decl_body: . let_decl_list ':' type_spec ';'
    9 let_decl_list: . let_decl_list ',' let_decl_init
   10              | . let_decl_init
   11 let_decl_init: . decl_id
   12              | . decl_id ASSIGN expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    let_decl_body  go to state 14
    let_decl_list  go to state 15
    let_decl_init  go to state 16
    decl_id        go to state 17


State 3

    0 $accept: program . $end

    $end  shift, and go to state 18


State 4

    6 global_decl: decl_types .

    $default  reduce using rule 6 (global_decl)


State 5

    1 program: global_decl . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl . func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
    3 decl_types: . var_decl
    4           | . const_decl
    5 global_decl: global_decl . decl_types
    7 var_decl: . KW_LET let_decl_body
   13 const_decl: . KW_CONST const_decl_body
   51 func_decl_list: . func_decl_list func_decl
   52               | . func_decl
   53 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    KW_CONST  shift, and go to state 19
    KW_LET    shift, and go to state 2

    decl_types      go to state 20
    var_decl        go to state 6
    const_decl      go to state 7
    func_decl_list  go to state 21
    func_decl       go to state 22


State 6

    3 decl_types: var_decl .

    $default  reduce using rule 3 (decl_types)


State 7

    4 decl_types: const_decl .

    $default  reduce using rule 4 (decl_types)


State 8

   20 decl_id: IDENT .  [ASSIGN, ':', ',', ']']
   22        | IDENT . '[' POSINT ']'
   23        | IDENT . '[' decl_id ']'

    '['  shift, and go to state 23

    $default  reduce using rule 20 (decl_id)


State 9

   21 decl_id: '[' . ']' IDENT

    ']'  shift, and go to state 24


State 10

   13 const_decl: KW_CONST const_decl_body .

    $default  reduce using rule 13 (const_decl)


State 11

   14 const_decl_body: const_decl_list . ':' type_spec ';'
   15 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 25
    ','  shift, and go to state 26


State 12

   16 const_decl_list: const_decl_init .

    $default  reduce using rule 16 (const_decl_list)


State 13

   17 const_decl_init: decl_id . ASSIGN POSINT
   18                | decl_id . ASSIGN REAL
   19                | decl_id . ASSIGN STRING

    ASSIGN  shift, and go to state 27


State 14

    7 var_decl: KW_LET let_decl_body .

    $default  reduce using rule 7 (var_decl)


State 15

    8 let_decl_body: let_decl_list . ':' type_spec ';'
    9 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 28
    ','  shift, and go to state 29


State 16

   10 let_decl_list: let_decl_init .

    $default  reduce using rule 10 (let_decl_list)


State 17

   11 let_decl_init: decl_id .  [':', ',']
   12              | decl_id . ASSIGN expr

    ASSIGN  shift, and go to state 30

    $default  reduce using rule 11 (let_decl_init)


State 18

    0 $accept: program $end .

    $default  accept


State 19

   13 const_decl: KW_CONST . const_decl_body
   14 const_decl_body: . const_decl_list ':' type_spec ';'
   15 const_decl_list: . const_decl_list ',' const_decl_init
   16                | . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   53 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    const_decl_body  go to state 10
    const_decl_list  go to state 11
    const_decl_init  go to state 12
    decl_id          go to state 31


State 20

    5 global_decl: global_decl decl_types .

    $default  reduce using rule 5 (global_decl)


State 21

    1 program: global_decl func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list . KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
   51 func_decl_list: func_decl_list . func_decl
   53 func_decl: . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | . KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    KW_CONST  shift, and go to state 32

    func_decl  go to state 33


State 22

   52 func_decl_list: func_decl .

    $default  reduce using rule 52 (func_decl_list)


State 23

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   22        | IDENT '[' . POSINT ']'
   23        | . IDENT '[' decl_id ']'
   23        | IDENT '[' . decl_id ']'

    IDENT   shift, and go to state 8
    POSINT  shift, and go to state 34
    '['     shift, and go to state 9

    decl_id  go to state 35


State 24

   21 decl_id: '[' ']' . IDENT

    IDENT  shift, and go to state 36


State 25

   14 const_decl_body: const_decl_list ':' . type_spec ';'
   24 type_spec: . KW_INT
   25          | . KW_REAL
   26          | . KW_BOOL
   27          | . KW_STRING

    KW_INT     shift, and go to state 37
    KW_REAL    shift, and go to state 38
    KW_STRING  shift, and go to state 39
    KW_BOOL    shift, and go to state 40

    type_spec  go to state 41


State 26

   15 const_decl_list: const_decl_list ',' . const_decl_init
   17 const_decl_init: . decl_id ASSIGN POSINT
   18                | . decl_id ASSIGN REAL
   19                | . decl_id ASSIGN STRING
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    const_decl_init  go to state 42
    decl_id          go to state 13


State 27

   17 const_decl_init: decl_id ASSIGN . POSINT
   18                | decl_id ASSIGN . REAL
   19                | decl_id ASSIGN . STRING

    STRING  shift, and go to state 43
    POSINT  shift, and go to state 44
    REAL    shift, and go to state 45


State 28

    8 let_decl_body: let_decl_list ':' . type_spec ';'
   24 type_spec: . KW_INT
   25          | . KW_REAL
   26          | . KW_BOOL
   27          | . KW_STRING

    KW_INT     shift, and go to state 37
    KW_REAL    shift, and go to state 38
    KW_STRING  shift, and go to state 39
    KW_BOOL    shift, and go to state 40

    type_spec  go to state 46


State 29

    9 let_decl_list: let_decl_list ',' . let_decl_init
   11 let_decl_init: . decl_id
   12              | . decl_id ASSIGN expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'

    IDENT  shift, and go to state 8
    '['    shift, and go to state 9

    let_decl_init  go to state 47
    decl_id        go to state 17


State 30

   12 let_decl_init: decl_id ASSIGN . expr
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 60
    func_call  go to state 61


State 31

   17 const_decl_init: decl_id . ASSIGN POSINT
   18                | decl_id . ASSIGN REAL
   19                | decl_id . ASSIGN STRING
   53 func_decl: KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    ASSIGN  shift, and go to state 62


State 32

    1 program: global_decl func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST . KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   53 func_decl: KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST . decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    KW_START  shift, and go to state 63
    IDENT     shift, and go to state 8
    '['       shift, and go to state 9

    decl_id  go to state 64


State 33

   51 func_decl_list: func_decl_list func_decl .

    $default  reduce using rule 51 (func_decl_list)


State 34

   22 decl_id: IDENT '[' POSINT . ']'

    ']'  shift, and go to state 65


State 35

   23 decl_id: IDENT '[' decl_id . ']'

    ']'  shift, and go to state 66


State 36

   21 decl_id: '[' ']' IDENT .

    $default  reduce using rule 21 (decl_id)


State 37

   24 type_spec: KW_INT .

    $default  reduce using rule 24 (type_spec)


State 38

   25 type_spec: KW_REAL .

    $default  reduce using rule 25 (type_spec)


State 39

   27 type_spec: KW_STRING .

    $default  reduce using rule 27 (type_spec)


State 40

   26 type_spec: KW_BOOL .

    $default  reduce using rule 26 (type_spec)


State 41

   14 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 67


State 42

   15 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 15 (const_decl_list)


State 43

   19 const_decl_init: decl_id ASSIGN STRING .

    $default  reduce using rule 19 (const_decl_init)


State 44

   17 const_decl_init: decl_id ASSIGN POSINT .

    $default  reduce using rule 17 (const_decl_init)


State 45

   18 const_decl_init: decl_id ASSIGN REAL .

    $default  reduce using rule 18 (const_decl_init)


State 46

    8 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 68


State 47

    9 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 9 (let_decl_list)


State 48

   49 expr: KW_TRUE .

    $default  reduce using rule 49 (expr)


State 49

   50 expr: KW_FALSE .

    $default  reduce using rule 50 (expr)


State 50

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   35     | KW_NOT . expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 69
    func_call  go to state 61


State 51

   30 expr: STRING .

    $default  reduce using rule 30 (expr)


State 52

   20 decl_id: IDENT .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ASSIGN, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   22        | IDENT . '[' POSINT ']'
   23        | IDENT . '[' decl_id ']'
   69 func_call: IDENT . '(' param_list ')'

    '('  shift, and go to state 70
    '['  shift, and go to state 23

    $default  reduce using rule 20 (decl_id)


State 53

   28 expr: POSINT .

    $default  reduce using rule 28 (expr)


State 54

   29 expr: REAL .

    $default  reduce using rule 29 (expr)


State 55

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   34     | '+' . expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 71
    func_call  go to state 61


State 56

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   33     | '-' . expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 72
    func_call  go to state 61


State 57

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   38     | '(' . expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 73
    func_call  go to state 61


State 58

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   21        | '[' . ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   39     | '[' . expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58
    ']'       shift, and go to state 24

    decl_id    go to state 59
    expr       go to state 74
    func_call  go to state 61


State 59

   31 expr: decl_id .

    $default  reduce using rule 31 (expr)


State 60

   12 let_decl_init: decl_id ASSIGN expr .  [':', ',']
   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 12 (let_decl_init)


State 61

   32 expr: func_call .

    $default  reduce using rule 32 (expr)


State 62

   17 const_decl_init: decl_id ASSIGN . POSINT
   18                | decl_id ASSIGN . REAL
   19                | decl_id ASSIGN . STRING
   53 func_decl: KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    STRING  shift, and go to state 43
    POSINT  shift, and go to state 44
    REAL    shift, and go to state 45
    '('     shift, and go to state 86


State 63

    1 program: global_decl func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START . ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}'

    ASSIGN  shift, and go to state 87


State 64

   53 func_decl: KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id . ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    ASSIGN  shift, and go to state 88


State 65

   22 decl_id: IDENT '[' POSINT ']' .

    $default  reduce using rule 22 (decl_id)


State 66

   23 decl_id: IDENT '[' decl_id ']' .

    $default  reduce using rule 23 (decl_id)


State 67

   14 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 14 (const_decl_body)


State 68

    8 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 8 (let_decl_body)


State 69

   35 expr: KW_NOT expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   36     | expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 35 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < KW_NOT).
    Conflict between rule 35 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < KW_NOT).
    Conflict between rule 35 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < KW_NOT).
    Conflict between rule 35 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < KW_NOT).
    Conflict between rule 35 and token '+' resolved as reduce ('+' < KW_NOT).
    Conflict between rule 35 and token '-' resolved as reduce ('-' < KW_NOT).
    Conflict between rule 35 and token '*' resolved as reduce ('*' < KW_NOT).
    Conflict between rule 35 and token '/' resolved as reduce ('/' < KW_NOT).
    Conflict between rule 35 and token '%' resolved as reduce ('%' < KW_NOT).


State 70

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'
   69          | IDENT '(' . param_list ')'
   70 param_list: . param_list ',' param
   71           | . param
   72 param: . expr
   73      | . %empty  [')', ',']

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    $default  reduce using rule 73 (param)

    decl_id     go to state 59
    expr        go to state 89
    func_call   go to state 61
    param_list  go to state 90
    param       go to state 91


State 71

   34 expr: '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   36     | expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 34 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '+').
    Conflict between rule 34 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '+').
    Conflict between rule 34 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '+').
    Conflict between rule 34 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '+').
    Conflict between rule 34 and token '+' resolved as reduce (%left '+').
    Conflict between rule 34 and token '-' resolved as reduce (%left '-').
    Conflict between rule 34 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 34 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 34 and token '%' resolved as shift ('+' < '%').


State 72

   33 expr: '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   36     | expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 33 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 33 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '-').
    Conflict between rule 33 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '-').
    Conflict between rule 33 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '-').
    Conflict between rule 33 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '-').
    Conflict between rule 33 and token '+' resolved as reduce (%left '+').
    Conflict between rule 33 and token '-' resolved as reduce (%left '-').
    Conflict between rule 33 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 33 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 33 and token '%' resolved as shift ('-' < '%').


State 73

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   38     | '(' expr . ')'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ')'           shift, and go to state 92


State 74

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   39     | '[' expr . ']'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ']'           shift, and go to state 93


State 75

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   37     | expr KW_AND . expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 94
    func_call  go to state 61


State 76

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   36     | expr KW_OR . expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 95
    func_call  go to state 61


State 77

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   48     | expr TK_OP_EQ . expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 96
    func_call  go to state 61


State 78

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   45     | expr TK_OP_BIGGER . expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 97
    func_call  go to state 61


State 79

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   46     | expr TK_OP_BIGEQ . expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 98
    func_call  go to state 61


State 80

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   47     | expr TK_OP_NOTEQ . expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 99
    func_call  go to state 61


State 81

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   40     | expr '+' . expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 100
    func_call  go to state 61


State 82

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   41     | expr '-' . expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 101
    func_call  go to state 61


State 83

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   42     | expr '*' . expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 102
    func_call  go to state 61


State 84

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   43     | expr '/' . expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 103
    func_call  go to state 61


State 85

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   44     | expr '%' . expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 104
    func_call  go to state 61


State 86

   53 func_decl: KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' . par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'
   57 par_decl_list: . par_decl_list ',' par_decl
   58              | . par_decl
   59 par_decl: . par_decl ':' type_spec
   60         | . %empty

    $default  reduce using rule 60 (par_decl)

    par_decl_list  go to state 105
    par_decl       go to state 106


State 87

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN . '(' ')' ':' KW_INT ARROW '{' body return '}'

    '('  shift, and go to state 107


State 88

   53 func_decl: KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN . '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';'

    '('  shift, and go to state 86


State 89

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr
   72 param: expr .  [')', ',']

    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 72 (param)


State 90

   69 func_call: IDENT '(' param_list . ')'
   70 param_list: param_list . ',' param

    ')'  shift, and go to state 108
    ','  shift, and go to state 109


State 91

   71 param_list: param .

    $default  reduce using rule 71 (param_list)


State 92

   38 expr: '(' expr ')' .

    $default  reduce using rule 38 (expr)


State 93

   39 expr: '[' expr ']' .

    $default  reduce using rule 39 (expr)


State 94

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   37     | expr KW_AND expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ')', ':', ';', ',', ']']
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 37 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 37 and token TK_OP_EQ resolved as shift (KW_AND < TK_OP_EQ).
    Conflict between rule 37 and token TK_OP_BIGGER resolved as shift (KW_AND < TK_OP_BIGGER).
    Conflict between rule 37 and token TK_OP_BIGEQ resolved as shift (KW_AND < TK_OP_BIGEQ).
    Conflict between rule 37 and token TK_OP_NOTEQ resolved as shift (KW_AND < TK_OP_NOTEQ).
    Conflict between rule 37 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 37 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 37 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 37 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 37 and token '%' resolved as shift (KW_AND < '%').


State 95

   36 expr: expr . KW_OR expr
   36     | expr KW_OR expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, ')', ':', ';', ',', ']']
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 36 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 36 and token TK_OP_EQ resolved as shift (KW_OR < TK_OP_EQ).
    Conflict between rule 36 and token TK_OP_BIGGER resolved as shift (KW_OR < TK_OP_BIGGER).
    Conflict between rule 36 and token TK_OP_BIGEQ resolved as shift (KW_OR < TK_OP_BIGEQ).
    Conflict between rule 36 and token TK_OP_NOTEQ resolved as shift (KW_OR < TK_OP_NOTEQ).
    Conflict between rule 36 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 36 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 36 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 36 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 36 and token '%' resolved as shift (KW_OR < '%').


State 96

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr
   48     | expr TK_OP_EQ expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < TK_OP_EQ).
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < TK_OP_EQ).
    Conflict between rule 48 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 48 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 48 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 48 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 48 and token '+' resolved as shift (TK_OP_EQ < '+').
    Conflict between rule 48 and token '-' resolved as shift (TK_OP_EQ < '-').
    Conflict between rule 48 and token '*' resolved as shift (TK_OP_EQ < '*').
    Conflict between rule 48 and token '/' resolved as shift (TK_OP_EQ < '/').
    Conflict between rule 48 and token '%' resolved as shift (TK_OP_EQ < '%').


State 97

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   45     | expr TK_OP_BIGGER expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < TK_OP_BIGGER).
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < TK_OP_BIGGER).
    Conflict between rule 45 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 45 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 45 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 45 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 45 and token '+' resolved as shift (TK_OP_BIGGER < '+').
    Conflict between rule 45 and token '-' resolved as shift (TK_OP_BIGGER < '-').
    Conflict between rule 45 and token '*' resolved as shift (TK_OP_BIGGER < '*').
    Conflict between rule 45 and token '/' resolved as shift (TK_OP_BIGGER < '/').
    Conflict between rule 45 and token '%' resolved as shift (TK_OP_BIGGER < '%').


State 98

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   46     | expr TK_OP_BIGEQ expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < TK_OP_BIGEQ).
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < TK_OP_BIGEQ).
    Conflict between rule 46 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 46 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 46 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 46 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 46 and token '+' resolved as shift (TK_OP_BIGEQ < '+').
    Conflict between rule 46 and token '-' resolved as shift (TK_OP_BIGEQ < '-').
    Conflict between rule 46 and token '*' resolved as shift (TK_OP_BIGEQ < '*').
    Conflict between rule 46 and token '/' resolved as shift (TK_OP_BIGEQ < '/').
    Conflict between rule 46 and token '%' resolved as shift (TK_OP_BIGEQ < '%').


State 99

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   47     | expr TK_OP_NOTEQ expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, ')', ':', ';', ',', ']']
   48     | expr . TK_OP_EQ expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < TK_OP_NOTEQ).
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < TK_OP_NOTEQ).
    Conflict between rule 47 and token TK_OP_EQ resolved as reduce (%left TK_OP_EQ).
    Conflict between rule 47 and token TK_OP_BIGGER resolved as reduce (%left TK_OP_BIGGER).
    Conflict between rule 47 and token TK_OP_BIGEQ resolved as reduce (%left TK_OP_BIGEQ).
    Conflict between rule 47 and token TK_OP_NOTEQ resolved as reduce (%left TK_OP_NOTEQ).
    Conflict between rule 47 and token '+' resolved as shift (TK_OP_NOTEQ < '+').
    Conflict between rule 47 and token '-' resolved as shift (TK_OP_NOTEQ < '-').
    Conflict between rule 47 and token '*' resolved as shift (TK_OP_NOTEQ < '*').
    Conflict between rule 47 and token '/' resolved as shift (TK_OP_NOTEQ < '/').
    Conflict between rule 47 and token '%' resolved as shift (TK_OP_NOTEQ < '%').


State 100

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   40     | expr '+' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 40 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '+').
    Conflict between rule 40 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '+').
    Conflict between rule 40 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '+').
    Conflict between rule 40 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '+').
    Conflict between rule 40 and token '+' resolved as reduce (%left '+').
    Conflict between rule 40 and token '-' resolved as reduce (%left '-').
    Conflict between rule 40 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 40 and token '%' resolved as shift ('+' < '%').


State 101

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   41     | expr '-' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', ')', ':', ';', ',', ']']
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 41 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '-').
    Conflict between rule 41 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '-').
    Conflict between rule 41 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '-').
    Conflict between rule 41 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '-').
    Conflict between rule 41 and token '+' resolved as reduce (%left '+').
    Conflict between rule 41 and token '-' resolved as reduce (%left '-').
    Conflict between rule 41 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 41 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 41 and token '%' resolved as shift ('-' < '%').


State 102

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   42     | expr '*' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 42 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '*').
    Conflict between rule 42 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '*').
    Conflict between rule 42 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '*').
    Conflict between rule 42 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '*').
    Conflict between rule 42 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 42 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 42 and token '*' resolved as reduce (%left '*').
    Conflict between rule 42 and token '/' resolved as reduce (%left '/').
    Conflict between rule 42 and token '%' resolved as reduce (%left '%').


State 103

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   43     | expr '/' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 43 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '/').
    Conflict between rule 43 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '/').
    Conflict between rule 43 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '/').
    Conflict between rule 43 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '/').
    Conflict between rule 43 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 43 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 43 and token '*' resolved as reduce (%left '*').
    Conflict between rule 43 and token '/' resolved as reduce (%left '/').
    Conflict between rule 43 and token '%' resolved as reduce (%left '%').


State 104

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   44     | expr '%' expr .  [KW_THEN, KW_LOOP, KW_AND, KW_OR, TK_OP_EQ, TK_OP_BIGGER, TK_OP_BIGEQ, TK_OP_NOTEQ, '+', '-', '*', '/', '%', ')', ':', ';', ',', ']']
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 44 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 44 and token TK_OP_EQ resolved as reduce (TK_OP_EQ < '%').
    Conflict between rule 44 and token TK_OP_BIGGER resolved as reduce (TK_OP_BIGGER < '%').
    Conflict between rule 44 and token TK_OP_BIGEQ resolved as reduce (TK_OP_BIGEQ < '%').
    Conflict between rule 44 and token TK_OP_NOTEQ resolved as reduce (TK_OP_NOTEQ < '%').
    Conflict between rule 44 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 44 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 44 and token '*' resolved as reduce (%left '*').
    Conflict between rule 44 and token '/' resolved as reduce (%left '/').
    Conflict between rule 44 and token '%' resolved as reduce (%left '%').


State 105

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' par_decl_list . ')' ':' type_spec ARROW '{' body return '}' ';'
   57 par_decl_list: par_decl_list . ',' par_decl

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


State 106

   58 par_decl_list: par_decl .  [')', ',']
   59 par_decl: par_decl . ':' type_spec

    ':'  shift, and go to state 112

    $default  reduce using rule 58 (par_decl_list)


State 107

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' . ')' ':' KW_INT ARROW '{' body return '}'

    ')'  shift, and go to state 113


State 108

   69 func_call: IDENT '(' param_list ')' .

    $default  reduce using rule 69 (func_call)


State 109

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'
   70 param_list: param_list ',' . param
   72 param: . expr
   73      | . %empty  [')', ',']

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    $default  reduce using rule 73 (param)

    decl_id    go to state 59
    expr       go to state 89
    func_call  go to state 61
    param      go to state 114


State 110

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' . ':' type_spec ARROW '{' body return '}' ';'

    ':'  shift, and go to state 115


State 111

   57 par_decl_list: par_decl_list ',' . par_decl
   59 par_decl: . par_decl ':' type_spec
   60         | . %empty

    $default  reduce using rule 60 (par_decl)

    par_decl  go to state 116


State 112

   24 type_spec: . KW_INT
   25          | . KW_REAL
   26          | . KW_BOOL
   27          | . KW_STRING
   59 par_decl: par_decl ':' . type_spec

    KW_INT     shift, and go to state 37
    KW_REAL    shift, and go to state 38
    KW_STRING  shift, and go to state 39
    KW_BOOL    shift, and go to state 40

    type_spec  go to state 117


State 113

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' . ':' KW_INT ARROW '{' body return '}'

    ':'  shift, and go to state 118


State 114

   70 param_list: param_list ',' param .

    $default  reduce using rule 70 (param_list)


State 115

   24 type_spec: . KW_INT
   25          | . KW_REAL
   26          | . KW_BOOL
   27          | . KW_STRING
   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' . type_spec ARROW '{' body return '}' ';'

    KW_INT     shift, and go to state 37
    KW_REAL    shift, and go to state 38
    KW_STRING  shift, and go to state 39
    KW_BOOL    shift, and go to state 40

    type_spec  go to state 119


State 116

   57 par_decl_list: par_decl_list ',' par_decl .  [')', ',']
   59 par_decl: par_decl . ':' type_spec

    ':'  shift, and go to state 112

    $default  reduce using rule 57 (par_decl_list)


State 117

   59 par_decl: par_decl ':' type_spec .

    $default  reduce using rule 59 (par_decl)


State 118

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' . KW_INT ARROW '{' body return '}'

    KW_INT  shift, and go to state 120


State 119

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec . ARROW '{' body return '}' ';'

    ARROW  shift, and go to state 121


State 120

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT . ARROW '{' body return '}'

    ARROW  shift, and go to state 122


State 121

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW . '{' body return '}' ';'

    '{'  shift, and go to state 123


State 122

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW . '{' body return '}'

    '{'  shift, and go to state 124


State 123

    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . local_decl body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . local_decl return '}' ';'
   55          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . return '}' ';'
   56          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' . body return '}' ';'
   61 body: . body command
   62     | . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   67 local_decl: . local_decl var_decl
   68           | . var_decl
   69 func_call: . IDENT '(' param_list ')'
   74 return: . KW_RETURN expr ';'
   75       | . KW_RETURN ';'
   76       | . %empty  ['}']
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 125
    KW_WHILE   shift, and go to state 126
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 127
    IDENT      shift, and go to state 52
    '['        shift, and go to state 9

    $default  reduce using rule 76 (return)

    var_decl       go to state 128
    decl_id        go to state 129
    body           go to state 130
    command        go to state 131
    local_decl     go to state 132
    func_call      go to state 133
    return         go to state 134
    if_command     go to state 135
    while_command  go to state 136


State 124

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . local_decl body return '}'
    2        | global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' . body return '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: . body command
   62     | . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   67 local_decl: . local_decl var_decl
   68           | . var_decl
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_WHILE  shift, and go to state 126
    KW_LET    shift, and go to state 2
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    var_decl       go to state 128
    decl_id        go to state 129
    body           go to state 137
    command        go to state 131
    local_decl     go to state 138
    func_call      go to state 133
    if_command     go to state 135
    while_command  go to state 136


State 125

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: KW_IF . expr KW_THEN body if_rest

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 139
    func_call  go to state 61


State 126

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'
   80 while_command: KW_WHILE . expr KW_LOOP body KW_POOL ';'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 140
    func_call  go to state 61


State 127

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   69 func_call: . IDENT '(' param_list ')'
   74 return: KW_RETURN . expr ';'
   75       | KW_RETURN . ';'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    ';'       shift, and go to state 141
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 142
    func_call  go to state 61


State 128

   68 local_decl: var_decl .

    $default  reduce using rule 68 (local_decl)


State 129

   63 command: decl_id . ASSIGN expr ';'

    ASSIGN  shift, and go to state 143


State 130

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   56 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body . return '}' ';'
   61 body: body . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   74 return: . KW_RETURN expr ';'
   75       | . KW_RETURN ';'
   76       | . %empty  ['}']
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 125
    KW_WHILE   shift, and go to state 126
    KW_RETURN  shift, and go to state 127
    IDENT      shift, and go to state 52
    '['        shift, and go to state 9

    $default  reduce using rule 76 (return)

    decl_id        go to state 129
    command        go to state 144
    func_call      go to state 133
    return         go to state 145
    if_command     go to state 135
    while_command  go to state 136


State 131

   62 body: command .

    $default  reduce using rule 62 (body)


State 132

    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl . body return '}' ';'
   54          | KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl . return '}' ';'
   61 body: . body command
   62     | . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   67 local_decl: local_decl . var_decl
   69 func_call: . IDENT '(' param_list ')'
   74 return: . KW_RETURN expr ';'
   75       | . KW_RETURN ';'
   76       | . %empty  ['}']
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 125
    KW_WHILE   shift, and go to state 126
    KW_LET     shift, and go to state 2
    KW_RETURN  shift, and go to state 127
    IDENT      shift, and go to state 52
    '['        shift, and go to state 9

    $default  reduce using rule 76 (return)

    var_decl       go to state 146
    decl_id        go to state 129
    body           go to state 147
    command        go to state 131
    func_call      go to state 133
    return         go to state 148
    if_command     go to state 135
    while_command  go to state 136


State 133

   64 command: func_call . ';'

    ';'  shift, and go to state 149


State 134

   55 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return . '}' ';'

    '}'  shift, and go to state 150


State 135

   65 command: if_command .

    $default  reduce using rule 65 (command)


State 136

   66 command: while_command .

    $default  reduce using rule 66 (command)


State 137

    2 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body . return '}'
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: body . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   74 return: . KW_RETURN expr ';'
   75       | . KW_RETURN ';'
   76       | . %empty  ['}']
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 125
    KW_WHILE   shift, and go to state 126
    KW_RETURN  shift, and go to state 127
    IDENT      shift, and go to state 52
    '['        shift, and go to state 9

    $default  reduce using rule 76 (return)

    decl_id        go to state 129
    command        go to state 144
    func_call      go to state 133
    return         go to state 151
    if_command     go to state 135
    while_command  go to state 136


State 138

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl . body return '}'
    7 var_decl: . KW_LET let_decl_body
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: . body command
   62     | . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   67 local_decl: local_decl . var_decl
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_WHILE  shift, and go to state 126
    KW_LET    shift, and go to state 2
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    var_decl       go to state 146
    decl_id        go to state 129
    body           go to state 152
    command        go to state 131
    func_call      go to state 133
    if_command     go to state 135
    while_command  go to state 136


State 139

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr
   77 if_command: KW_IF expr . KW_THEN body if_rest

    KW_THEN       shift, and go to state 153
    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85


State 140

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr
   80 while_command: KW_WHILE expr . KW_LOOP body KW_POOL ';'

    KW_LOOP       shift, and go to state 154
    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85


State 141

   75 return: KW_RETURN ';' .

    $default  reduce using rule 75 (return)


State 142

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr
   74 return: KW_RETURN expr . ';'

    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 155


State 143

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   28 expr: . POSINT
   29     | . REAL
   30     | . STRING
   31     | . decl_id
   32     | . func_call
   33     | . '-' expr
   34     | . '+' expr
   35     | . KW_NOT expr
   36     | . expr KW_OR expr
   37     | . expr KW_AND expr
   38     | . '(' expr ')'
   39     | . '[' expr ']'
   40     | . expr '+' expr
   41     | . expr '-' expr
   42     | . expr '*' expr
   43     | . expr '/' expr
   44     | . expr '%' expr
   45     | . expr TK_OP_BIGGER expr
   46     | . expr TK_OP_BIGEQ expr
   47     | . expr TK_OP_NOTEQ expr
   48     | . expr TK_OP_EQ expr
   49     | . KW_TRUE
   50     | . KW_FALSE
   63 command: decl_id ASSIGN . expr ';'
   69 func_call: . IDENT '(' param_list ')'

    KW_TRUE   shift, and go to state 48
    KW_FALSE  shift, and go to state 49
    KW_NOT    shift, and go to state 50
    STRING    shift, and go to state 51
    IDENT     shift, and go to state 52
    POSINT    shift, and go to state 53
    REAL      shift, and go to state 54
    '+'       shift, and go to state 55
    '-'       shift, and go to state 56
    '('       shift, and go to state 57
    '['       shift, and go to state 58

    decl_id    go to state 59
    expr       go to state 156
    func_call  go to state 61


State 144

   61 body: body command .

    $default  reduce using rule 61 (body)


State 145

   56 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return . '}' ';'

    '}'  shift, and go to state 157


State 146

   67 local_decl: local_decl var_decl .

    $default  reduce using rule 67 (local_decl)


State 147

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body . return '}' ';'
   61 body: body . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   74 return: . KW_RETURN expr ';'
   75       | . KW_RETURN ';'
   76       | . %empty  ['}']
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 125
    KW_WHILE   shift, and go to state 126
    KW_RETURN  shift, and go to state 127
    IDENT      shift, and go to state 52
    '['        shift, and go to state 9

    $default  reduce using rule 76 (return)

    decl_id        go to state 129
    command        go to state 144
    func_call      go to state 133
    return         go to state 158
    if_command     go to state 135
    while_command  go to state 136


State 148

   54 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return . '}' ';'

    '}'  shift, and go to state 159


State 149

   64 command: func_call ';' .

    $default  reduce using rule 64 (command)


State 150

   55 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' . ';'

    ';'  shift, and go to state 160


State 151

    2 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return . '}'

    '}'  shift, and go to state 161


State 152

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body . return '}'
   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: body . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   74 return: . KW_RETURN expr ';'
   75       | . KW_RETURN ';'
   76       | . %empty  ['}']
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF      shift, and go to state 125
    KW_WHILE   shift, and go to state 126
    KW_RETURN  shift, and go to state 127
    IDENT      shift, and go to state 52
    '['        shift, and go to state 9

    $default  reduce using rule 76 (return)

    decl_id        go to state 129
    command        go to state 144
    func_call      go to state 133
    return         go to state 162
    if_command     go to state 135
    while_command  go to state 136


State 153

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: . body command
   62     | . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   77           | KW_IF expr KW_THEN . body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_WHILE  shift, and go to state 126
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    decl_id        go to state 129
    body           go to state 163
    command        go to state 131
    func_call      go to state 133
    if_command     go to state 135
    while_command  go to state 136


State 154

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: . body command
   62     | . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   80              | KW_WHILE expr KW_LOOP . body KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_WHILE  shift, and go to state 126
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    decl_id        go to state 129
    body           go to state 164
    command        go to state 131
    func_call      go to state 133
    if_command     go to state 135
    while_command  go to state 136


State 155

   74 return: KW_RETURN expr ';' .

    $default  reduce using rule 74 (return)


State 156

   36 expr: expr . KW_OR expr
   37     | expr . KW_AND expr
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . TK_OP_BIGGER expr
   46     | expr . TK_OP_BIGEQ expr
   47     | expr . TK_OP_NOTEQ expr
   48     | expr . TK_OP_EQ expr
   63 command: decl_id ASSIGN expr . ';'

    KW_AND        shift, and go to state 75
    KW_OR         shift, and go to state 76
    TK_OP_EQ      shift, and go to state 77
    TK_OP_BIGGER  shift, and go to state 78
    TK_OP_BIGEQ   shift, and go to state 79
    TK_OP_NOTEQ   shift, and go to state 80
    '+'           shift, and go to state 81
    '-'           shift, and go to state 82
    '*'           shift, and go to state 83
    '/'           shift, and go to state 84
    '%'           shift, and go to state 85
    ';'           shift, and go to state 165


State 157

   56 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' . ';'

    ';'  shift, and go to state 166


State 158

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return . '}' ';'

    '}'  shift, and go to state 167


State 159

   54 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' . ';'

    ';'  shift, and go to state 168


State 160

   55 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' return '}' ';' .

    $default  reduce using rule 55 (func_decl)


State 161

    2 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' body return '}' .

    $default  reduce using rule 2 (program)


State 162

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return . '}'

    '}'  shift, and go to state 169


State 163

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: body . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   77           | KW_IF expr KW_THEN body . if_rest
   78 if_rest: . KW_ELSE body KW_FI ';'
   79        | . KW_FI ';'
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_ELSE   shift, and go to state 170
    KW_FI     shift, and go to state 171
    KW_WHILE  shift, and go to state 126
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    decl_id        go to state 129
    command        go to state 144
    func_call      go to state 133
    if_command     go to state 135
    if_rest        go to state 172
    while_command  go to state 136


State 164

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: body . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'
   80              | KW_WHILE expr KW_LOOP body . KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_WHILE  shift, and go to state 126
    KW_POOL   shift, and go to state 173
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    decl_id        go to state 129
    command        go to state 144
    func_call      go to state 133
    if_command     go to state 135
    while_command  go to state 136


State 165

   63 command: decl_id ASSIGN expr ';' .

    $default  reduce using rule 63 (command)


State 166

   56 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' body return '}' ';' .

    $default  reduce using rule 56 (func_decl)


State 167

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' . ';'

    ';'  shift, and go to state 174


State 168

   54 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl return '}' ';' .

    $default  reduce using rule 54 (func_decl)


State 169

    1 program: global_decl func_decl_list KW_CONST KW_START ASSIGN '(' ')' ':' KW_INT ARROW '{' local_decl body return '}' .

    $default  reduce using rule 1 (program)


State 170

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: . body command
   62     | . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   78 if_rest: KW_ELSE . body KW_FI ';'
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_WHILE  shift, and go to state 126
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    decl_id        go to state 129
    body           go to state 175
    command        go to state 131
    func_call      go to state 133
    if_command     go to state 135
    while_command  go to state 136


State 171

   79 if_rest: KW_FI . ';'

    ';'  shift, and go to state 176


State 172

   77 if_command: KW_IF expr KW_THEN body if_rest .

    $default  reduce using rule 77 (if_command)


State 173

   80 while_command: KW_WHILE expr KW_LOOP body KW_POOL . ';'

    ';'  shift, and go to state 177


State 174

   53 func_decl: KW_CONST decl_id ASSIGN '(' par_decl_list ')' ':' type_spec ARROW '{' local_decl body return '}' ';' .

    $default  reduce using rule 53 (func_decl)


State 175

   20 decl_id: . IDENT
   21        | . '[' ']' IDENT
   22        | . IDENT '[' POSINT ']'
   23        | . IDENT '[' decl_id ']'
   61 body: body . command
   63 command: . decl_id ASSIGN expr ';'
   64        | . func_call ';'
   65        | . if_command
   66        | . while_command
   69 func_call: . IDENT '(' param_list ')'
   77 if_command: . KW_IF expr KW_THEN body if_rest
   78 if_rest: KW_ELSE body . KW_FI ';'
   80 while_command: . KW_WHILE expr KW_LOOP body KW_POOL ';'

    KW_IF     shift, and go to state 125
    KW_FI     shift, and go to state 178
    KW_WHILE  shift, and go to state 126
    IDENT     shift, and go to state 52
    '['       shift, and go to state 9

    decl_id        go to state 129
    command        go to state 144
    func_call      go to state 133
    if_command     go to state 135
    while_command  go to state 136


State 176

   79 if_rest: KW_FI ';' .

    $default  reduce using rule 79 (if_rest)


State 177

   80 while_command: KW_WHILE expr KW_LOOP body KW_POOL ';' .

    $default  reduce using rule 80 (while_command)


State 178

   78 if_rest: KW_ELSE body KW_FI . ';'

    ';'  shift, and go to state 179


State 179

   78 if_rest: KW_ELSE body KW_FI ';' .

    $default  reduce using rule 78 (if_rest)
